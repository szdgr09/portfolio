{
  "version": 3,
  "sources": ["../../tsparticles-engine/esm/Core/Utils/Constants.js", "../../tsparticles-engine/esm/Core/Utils/Vector3d.js", "../../tsparticles-engine/esm/Core/Utils/Vector.js", "../../tsparticles-engine/esm/Utils/NumberUtils.js", "../../tsparticles-engine/esm/Utils/Utils.js", "../../tsparticles-engine/esm/Utils/EventDispatcher.js", "../../tsparticles-engine/esm/Utils/ColorUtils.js", "../../tsparticles-engine/esm/Utils/CanvasUtils.js", "../../tsparticles-engine/esm/Core/Canvas.js", "../../tsparticles-engine/esm/Core/Utils/EventListeners.js", "../../tsparticles-engine/esm/Core/Utils/FrameManager.js", "../../tsparticles-engine/esm/Options/Classes/OptionsColor.js", "../../tsparticles-engine/esm/Options/Classes/Background/Background.js", "../../tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js", "../../tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js", "../../tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js", "../../tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js", "../../tsparticles-engine/esm/Options/Classes/ManualParticle.js", "../../tsparticles-engine/esm/Options/Classes/Responsive.js", "../../tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js", "../../tsparticles-engine/esm/Options/Classes/Theme/Theme.js", "../../tsparticles-engine/esm/Options/Classes/ColorAnimation.js", "../../tsparticles-engine/esm/Options/Classes/HslAnimation.js", "../../tsparticles-engine/esm/Options/Classes/AnimatableColor.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js", "../../tsparticles-engine/esm/Options/Classes/AnimationOptions.js", "../../tsparticles-engine/esm/Options/Classes/Random.js", "../../tsparticles-engine/esm/Options/Classes/ValueWithRandom.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Shadow.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js", "../../tsparticles-engine/esm/Options/Classes/Particles/Stroke.js", "../../tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js", "../../tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js", "../../tsparticles-engine/esm/Utils/OptionsUtils.js", "../../tsparticles-engine/esm/Options/Classes/Options.js", "../../tsparticles-engine/esm/Core/Utils/InteractionManager.js", "../../tsparticles-engine/esm/Core/Particle.js", "../../tsparticles-engine/esm/Core/Utils/Point.js", "../../tsparticles-engine/esm/Core/Utils/Range.js", "../../tsparticles-engine/esm/Core/Utils/Circle.js", "../../tsparticles-engine/esm/Core/Utils/Rectangle.js", "../../tsparticles-engine/esm/Core/Utils/QuadTree.js", "../../tsparticles-engine/esm/Core/Particles.js", "../../tsparticles-engine/esm/Core/Retina.js", "../../tsparticles-engine/esm/Core/Container.js", "../../tsparticles-engine/esm/Core/Loader.js", "../../tsparticles-engine/esm/Core/Utils/Plugins.js", "../../tsparticles-engine/esm/engine.js", "../../tsparticles-engine/esm/Utils/HslColorManager.js", "../../tsparticles-engine/esm/Utils/RgbColorManager.js", "../../tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js", "../../tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js", "../../tsparticles-engine/esm/index.js"],
  "sourcesContent": ["export const generatedAttribute = \"generated\";\r\nexport const mouseDownEvent = \"pointerdown\";\r\nexport const mouseUpEvent = \"pointerup\";\r\nexport const mouseLeaveEvent = \"pointerleave\";\r\nexport const mouseOutEvent = \"pointerout\";\r\nexport const mouseMoveEvent = \"pointermove\";\r\nexport const touchStartEvent = \"touchstart\";\r\nexport const touchEndEvent = \"touchend\";\r\nexport const touchMoveEvent = \"touchmove\";\r\nexport const touchCancelEvent = \"touchcancel\";\r\nexport const resizeEvent = \"resize\";\r\nexport const visibilityChangeEvent = \"visibilitychange\";\r\nexport const errorPrefix = \"tsParticles - Error\";\r\n", "import { errorPrefix } from \"./Constants\";\r\nexport class Vector3d {\r\n    constructor(xOrCoords, y, z) {\r\n        this._updateFromAngle = (angle, length) => {\r\n            this.x = Math.cos(angle) * length;\r\n            this.y = Math.sin(angle) * length;\r\n        };\r\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\r\n            this.x = xOrCoords.x;\r\n            this.y = xOrCoords.y;\r\n            const coords3d = xOrCoords;\r\n            this.z = coords3d.z ? coords3d.z : 0;\r\n        }\r\n        else if (xOrCoords !== undefined && y !== undefined) {\r\n            this.x = xOrCoords;\r\n            this.y = y;\r\n            this.z = z ?? 0;\r\n        }\r\n        else {\r\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\r\n        }\r\n    }\r\n    static get origin() {\r\n        return Vector3d.create(0, 0, 0);\r\n    }\r\n    get angle() {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n    set angle(angle) {\r\n        this._updateFromAngle(angle, this.length);\r\n    }\r\n    get length() {\r\n        return Math.sqrt(this.getLengthSq());\r\n    }\r\n    set length(length) {\r\n        this._updateFromAngle(this.angle, length);\r\n    }\r\n    static clone(source) {\r\n        return Vector3d.create(source.x, source.y, source.z);\r\n    }\r\n    static create(x, y, z) {\r\n        return new Vector3d(x, y, z);\r\n    }\r\n    add(v) {\r\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\r\n    }\r\n    addTo(v) {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n    }\r\n    copy() {\r\n        return Vector3d.clone(this);\r\n    }\r\n    distanceTo(v) {\r\n        return this.sub(v).length;\r\n    }\r\n    distanceToSq(v) {\r\n        return this.sub(v).getLengthSq();\r\n    }\r\n    div(n) {\r\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\r\n    }\r\n    divTo(n) {\r\n        this.x /= n;\r\n        this.y /= n;\r\n        this.z /= n;\r\n    }\r\n    getLengthSq() {\r\n        return this.x ** 2 + this.y ** 2;\r\n    }\r\n    mult(n) {\r\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\r\n    }\r\n    multTo(n) {\r\n        this.x *= n;\r\n        this.y *= n;\r\n        this.z *= n;\r\n    }\r\n    rotate(angle) {\r\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\r\n    }\r\n    setTo(c) {\r\n        this.x = c.x;\r\n        this.y = c.y;\r\n        const v3d = c;\r\n        this.z = v3d.z ? v3d.z : 0;\r\n    }\r\n    sub(v) {\r\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\r\n    }\r\n    subFrom(v) {\r\n        this.x -= v.x;\r\n        this.y -= v.y;\r\n        this.z -= v.z;\r\n    }\r\n}\r\n", "import { Vector3d } from \"./Vector3d\";\r\nexport class Vector extends Vector3d {\r\n    constructor(xOrCoords, y) {\r\n        super(xOrCoords, y, 0);\r\n    }\r\n    static get origin() {\r\n        return Vector.create(0, 0);\r\n    }\r\n    static clone(source) {\r\n        return Vector.create(source.x, source.y);\r\n    }\r\n    static create(x, y) {\r\n        return new Vector(x, y);\r\n    }\r\n}\r\n", "import { Vector } from \"../Core/Utils/Vector\";\r\nlet _random = Math.random;\r\nconst easings = new Map();\r\nexport function addEasing(name, easing) {\r\n    if (easings.get(name)) {\r\n        return;\r\n    }\r\n    easings.set(name, easing);\r\n}\r\nexport function getEasing(name) {\r\n    return easings.get(name) || ((value) => value);\r\n}\r\nexport function setRandom(rnd = Math.random) {\r\n    _random = rnd;\r\n}\r\nexport function getRandom() {\r\n    return clamp(_random(), 0, 1 - 1e-16);\r\n}\r\nexport function clamp(num, min, max) {\r\n    return Math.min(Math.max(num, min), max);\r\n}\r\nexport function mix(comp1, comp2, weight1, weight2) {\r\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\r\n}\r\nexport function randomInRange(r) {\r\n    const max = getRangeMax(r);\r\n    let min = getRangeMin(r);\r\n    if (max === min) {\r\n        min = 0;\r\n    }\r\n    return getRandom() * (max - min) + min;\r\n}\r\nexport function getRangeValue(value) {\r\n    return typeof value === \"number\" ? value : randomInRange(value);\r\n}\r\nexport function getRangeMin(value) {\r\n    return typeof value === \"number\" ? value : value.min;\r\n}\r\nexport function getRangeMax(value) {\r\n    return typeof value === \"number\" ? value : value.max;\r\n}\r\nexport function setRangeValue(source, value) {\r\n    if (source === value || (value === undefined && typeof source === \"number\")) {\r\n        return source;\r\n    }\r\n    const min = getRangeMin(source), max = getRangeMax(source);\r\n    return value !== undefined\r\n        ? {\r\n            min: Math.min(min, value),\r\n            max: Math.max(max, value),\r\n        }\r\n        : setRangeValue(min, max);\r\n}\r\nexport function getValue(options) {\r\n    const random = options.random, { enable, minimumValue } = typeof random === \"boolean\"\r\n        ? {\r\n            enable: random,\r\n            minimumValue: 0,\r\n        }\r\n        : random;\r\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\r\n}\r\nexport function getDistances(pointA, pointB) {\r\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\r\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\r\n}\r\nexport function getDistance(pointA, pointB) {\r\n    return getDistances(pointA, pointB).distance;\r\n}\r\nexport function getParticleDirectionAngle(direction, position, center) {\r\n    if (typeof direction === \"number\") {\r\n        return (direction * Math.PI) / 180;\r\n    }\r\n    else {\r\n        switch (direction) {\r\n            case \"top\":\r\n                return -Math.PI / 2;\r\n            case \"top-right\":\r\n                return -Math.PI / 4;\r\n            case \"right\":\r\n                return 0;\r\n            case \"bottom-right\":\r\n                return Math.PI / 4;\r\n            case \"bottom\":\r\n                return Math.PI / 2;\r\n            case \"bottom-left\":\r\n                return (3 * Math.PI) / 4;\r\n            case \"left\":\r\n                return Math.PI;\r\n            case \"top-left\":\r\n                return (-3 * Math.PI) / 4;\r\n            case \"inside\":\r\n                return Math.atan2(center.y - position.y, center.x - position.x);\r\n            case \"outside\":\r\n                return Math.atan2(position.y - center.y, position.x - center.x);\r\n            default:\r\n                return getRandom() * Math.PI * 2;\r\n        }\r\n    }\r\n}\r\nexport function getParticleBaseVelocity(direction) {\r\n    const baseVelocity = Vector.origin;\r\n    baseVelocity.length = 1;\r\n    baseVelocity.angle = direction;\r\n    return baseVelocity;\r\n}\r\nexport function collisionVelocity(v1, v2, m1, m2) {\r\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\r\n}\r\nexport function calcPositionFromSize(data) {\r\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\r\n        ? {\r\n            x: (data.position.x * data.size.width) / 100,\r\n            y: (data.position.y * data.size.height) / 100,\r\n        }\r\n        : undefined;\r\n}\r\nexport function calcPositionOrRandomFromSize(data) {\r\n    return {\r\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\r\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\r\n    };\r\n}\r\nexport function calcPositionOrRandomFromSizeRanged(data) {\r\n    const position = {\r\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\r\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\r\n    };\r\n    return calcPositionOrRandomFromSize({ size: data.size, position });\r\n}\r\nexport function calcExactPositionOrRandomFromSize(data) {\r\n    return {\r\n        x: data.position?.x ?? getRandom() * data.size.width,\r\n        y: data.position?.y ?? getRandom() * data.size.height,\r\n    };\r\n}\r\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\r\n    const position = {\r\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\r\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\r\n    };\r\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\r\n}\r\nexport function parseAlpha(input) {\r\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\r\n}\r\n", "import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\r\nimport { Vector } from \"../Core/Utils/Vector\";\r\nfunction rectSideBounce(data) {\r\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\r\n    if (pOtherSide.min < rectOtherSide.min ||\r\n        pOtherSide.min > rectOtherSide.max ||\r\n        pOtherSide.max < rectOtherSide.min ||\r\n        pOtherSide.max > rectOtherSide.max) {\r\n        return res;\r\n    }\r\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\r\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\r\n        res.velocity = velocity * -factor;\r\n        res.bounced = true;\r\n    }\r\n    return res;\r\n}\r\nfunction checkSelector(element, selectors) {\r\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\r\n        return element.matches(selector);\r\n    });\r\n    return res instanceof Array ? res.some((t) => t) : res;\r\n}\r\nexport function isSsr() {\r\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\r\n}\r\nexport function hasMatchMedia() {\r\n    return !isSsr() && typeof matchMedia !== \"undefined\";\r\n}\r\nexport function safeMatchMedia(query) {\r\n    if (!hasMatchMedia()) {\r\n        return;\r\n    }\r\n    return matchMedia(query);\r\n}\r\nexport function animate() {\r\n    return isSsr()\r\n        ? (callback) => setTimeout(callback)\r\n        : (callback) => (requestAnimationFrame || setTimeout)(callback);\r\n}\r\nexport function cancelAnimation() {\r\n    return isSsr()\r\n        ? (handle) => clearTimeout(handle)\r\n        : (handle) => (cancelAnimationFrame || clearTimeout)(handle);\r\n}\r\nexport function isInArray(value, array) {\r\n    return value === array || (array instanceof Array && array.indexOf(value) > -1);\r\n}\r\nexport async function loadFont(font, weight) {\r\n    try {\r\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\r\n    }\r\n    catch {\r\n    }\r\n}\r\nexport function arrayRandomIndex(array) {\r\n    return Math.floor(getRandom() * array.length);\r\n}\r\nexport function itemFromArray(array, index, useIndex = true) {\r\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\r\n}\r\nexport function isPointInside(point, size, offset, radius, direction) {\r\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\r\n}\r\nexport function areBoundsInside(bounds, size, offset, direction) {\r\n    let inside = true;\r\n    if (!direction || direction === \"bottom\") {\r\n        inside = bounds.top < size.height + offset.x;\r\n    }\r\n    if (inside && (!direction || direction === \"left\")) {\r\n        inside = bounds.right > offset.x;\r\n    }\r\n    if (inside && (!direction || direction === \"right\")) {\r\n        inside = bounds.left < size.width + offset.y;\r\n    }\r\n    if (inside && (!direction || direction === \"top\")) {\r\n        inside = bounds.bottom > offset.y;\r\n    }\r\n    return inside;\r\n}\r\nexport function calculateBounds(point, radius) {\r\n    return {\r\n        bottom: point.y + radius,\r\n        left: point.x - radius,\r\n        right: point.x + radius,\r\n        top: point.y - radius,\r\n    };\r\n}\r\nexport function deepExtend(destination, ...sources) {\r\n    for (const source of sources) {\r\n        if (source === undefined || source === null) {\r\n            continue;\r\n        }\r\n        if (typeof source !== \"object\") {\r\n            destination = source;\r\n            continue;\r\n        }\r\n        const sourceIsArray = Array.isArray(source);\r\n        if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\r\n            destination = [];\r\n        }\r\n        else if (!sourceIsArray && (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\r\n            destination = {};\r\n        }\r\n        for (const key in source) {\r\n            if (key === \"__proto__\") {\r\n                continue;\r\n            }\r\n            const sourceDict = source, value = sourceDict[key], isObject = typeof value === \"object\", destDict = destination;\r\n            destDict[key] =\r\n                isObject && Array.isArray(value)\r\n                    ? value.map((v) => deepExtend(destDict[key], v))\r\n                    : deepExtend(destDict[key], value);\r\n        }\r\n    }\r\n    return destination;\r\n}\r\nexport function isDivModeEnabled(mode, divs) {\r\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\r\n}\r\nexport function divModeExecute(mode, divs, callback) {\r\n    executeOnSingleOrMultiple(divs, (div) => {\r\n        const divMode = div.mode, divEnabled = div.enable;\r\n        if (divEnabled && isInArray(mode, divMode)) {\r\n            singleDivModeExecute(div, callback);\r\n        }\r\n    });\r\n}\r\nexport function singleDivModeExecute(div, callback) {\r\n    const selectors = div.selectors;\r\n    executeOnSingleOrMultiple(selectors, (selector) => {\r\n        callback(selector, div);\r\n    });\r\n}\r\nexport function divMode(divs, element) {\r\n    if (!element || !divs) {\r\n        return;\r\n    }\r\n    return findItemFromSingleOrMultiple(divs, (div) => {\r\n        return checkSelector(element, div.selectors);\r\n    });\r\n}\r\nexport function circleBounceDataFromParticle(p) {\r\n    return {\r\n        position: p.getPosition(),\r\n        radius: p.getRadius(),\r\n        mass: p.getMass(),\r\n        velocity: p.velocity,\r\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\r\n    };\r\n}\r\nexport function circleBounce(p1, p2) {\r\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\r\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\r\n        return;\r\n    }\r\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\r\n    p1.velocity.x = vFinal1.x * p1.factor.x;\r\n    p1.velocity.y = vFinal1.y * p1.factor.y;\r\n    p2.velocity.x = vFinal2.x * p2.factor.x;\r\n    p2.velocity.y = vFinal2.y * p2.factor.y;\r\n}\r\nexport function rectBounce(particle, divBounds) {\r\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\r\n        pSide: {\r\n            min: bounds.left,\r\n            max: bounds.right,\r\n        },\r\n        pOtherSide: {\r\n            min: bounds.top,\r\n            max: bounds.bottom,\r\n        },\r\n        rectSide: {\r\n            min: divBounds.left,\r\n            max: divBounds.right,\r\n        },\r\n        rectOtherSide: {\r\n            min: divBounds.top,\r\n            max: divBounds.bottom,\r\n        },\r\n        velocity: particle.velocity.x,\r\n        factor: getValue(particle.options.bounce.horizontal),\r\n    });\r\n    if (resH.bounced) {\r\n        if (resH.velocity !== undefined) {\r\n            particle.velocity.x = resH.velocity;\r\n        }\r\n        if (resH.position !== undefined) {\r\n            particle.position.x = resH.position;\r\n        }\r\n    }\r\n    const resV = rectSideBounce({\r\n        pSide: {\r\n            min: bounds.top,\r\n            max: bounds.bottom,\r\n        },\r\n        pOtherSide: {\r\n            min: bounds.left,\r\n            max: bounds.right,\r\n        },\r\n        rectSide: {\r\n            min: divBounds.top,\r\n            max: divBounds.bottom,\r\n        },\r\n        rectOtherSide: {\r\n            min: divBounds.left,\r\n            max: divBounds.right,\r\n        },\r\n        velocity: particle.velocity.y,\r\n        factor: getValue(particle.options.bounce.vertical),\r\n    });\r\n    if (resV.bounced) {\r\n        if (resV.velocity !== undefined) {\r\n            particle.velocity.y = resV.velocity;\r\n        }\r\n        if (resV.position !== undefined) {\r\n            particle.position.y = resV.position;\r\n        }\r\n    }\r\n}\r\nexport function executeOnSingleOrMultiple(obj, callback) {\r\n    return obj instanceof Array ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\r\n}\r\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\r\n    return obj instanceof Array ? itemFromArray(obj, index, useIndex) : obj;\r\n}\r\nexport function findItemFromSingleOrMultiple(obj, callback) {\r\n    return obj instanceof Array ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\r\n}\r\nexport function initParticleNumericAnimationValue(options, pxRatio) {\r\n    const valueRange = options.value, animationOptions = options.animation, res = {\r\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\r\n        enable: animationOptions.enable,\r\n        value: getRangeValue(options.value) * pxRatio,\r\n        max: getRangeMax(valueRange) * pxRatio,\r\n        min: getRangeMin(valueRange) * pxRatio,\r\n        loops: 0,\r\n        maxLoops: getRangeValue(animationOptions.count),\r\n        time: 0,\r\n    };\r\n    if (animationOptions.enable) {\r\n        res.decay = 1 - getRangeValue(animationOptions.decay);\r\n        switch (animationOptions.mode) {\r\n            case \"increase\":\r\n                res.status = \"increasing\";\r\n                break;\r\n            case \"decrease\":\r\n                res.status = \"decreasing\";\r\n                break;\r\n            case \"random\":\r\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\r\n                break;\r\n        }\r\n        const autoStatus = animationOptions.mode === \"auto\";\r\n        switch (animationOptions.startValue) {\r\n            case \"min\":\r\n                res.value = res.min;\r\n                if (autoStatus) {\r\n                    res.status = \"increasing\";\r\n                }\r\n                break;\r\n            case \"max\":\r\n                res.value = res.max;\r\n                if (autoStatus) {\r\n                    res.status = \"decreasing\";\r\n                }\r\n                break;\r\n            case \"random\":\r\n            default:\r\n                res.value = randomInRange(res);\r\n                if (autoStatus) {\r\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    res.initialValue = res.value;\r\n    return res;\r\n}\r\n", "export class EventDispatcher {\r\n    constructor() {\r\n        this._listeners = new Map();\r\n    }\r\n    addEventListener(type, listener) {\r\n        this.removeEventListener(type, listener);\r\n        let arr = this._listeners.get(type);\r\n        if (!arr) {\r\n            arr = [];\r\n            this._listeners.set(type, arr);\r\n        }\r\n        arr.push(listener);\r\n    }\r\n    dispatchEvent(type, args) {\r\n        const listeners = this._listeners.get(type);\r\n        listeners && listeners.forEach((handler) => handler(args));\r\n    }\r\n    hasEventListener(type) {\r\n        return !!this._listeners.get(type);\r\n    }\r\n    removeAllEventListeners(type) {\r\n        if (!type) {\r\n            this._listeners = new Map();\r\n        }\r\n        else {\r\n            this._listeners.delete(type);\r\n        }\r\n    }\r\n    removeEventListener(type, listener) {\r\n        const arr = this._listeners.get(type);\r\n        if (!arr) {\r\n            return;\r\n        }\r\n        const length = arr.length, idx = arr.indexOf(listener);\r\n        if (idx < 0) {\r\n            return;\r\n        }\r\n        if (length === 1) {\r\n            this._listeners.delete(type);\r\n        }\r\n        else {\r\n            arr.splice(idx, 1);\r\n        }\r\n    }\r\n}\r\n", "import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\r\nimport { itemFromArray } from \"./Utils\";\r\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\r\nexport function addColorManager(manager) {\r\n    colorManagers.set(manager.key, manager);\r\n}\r\nfunction hue2rgb(p, q, t) {\r\n    if (t < 0) {\r\n        t += 1;\r\n    }\r\n    if (t > 1) {\r\n        t -= 1;\r\n    }\r\n    if (t < 1 / 6) {\r\n        return p + (q - p) * 6 * t;\r\n    }\r\n    if (t < 1 / 2) {\r\n        return q;\r\n    }\r\n    if (t < 2 / 3) {\r\n        return p + (q - p) * (2 / 3 - t) * 6;\r\n    }\r\n    return p;\r\n}\r\nfunction stringToRgba(input) {\r\n    for (const [, manager] of colorManagers) {\r\n        if (input.startsWith(manager.stringPrefix)) {\r\n            return manager.parseString(input);\r\n        }\r\n    }\r\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\r\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\r\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\r\n    return result\r\n        ? {\r\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\r\n            b: parseInt(result[3], 16),\r\n            g: parseInt(result[2], 16),\r\n            r: parseInt(result[1], 16),\r\n        }\r\n        : undefined;\r\n}\r\nexport function rangeColorToRgb(input, index, useIndex = true) {\r\n    if (!input) {\r\n        return;\r\n    }\r\n    const color = typeof input === \"string\" ? { value: input } : input;\r\n    if (typeof color.value === \"string\") {\r\n        return colorToRgb(color.value, index, useIndex);\r\n    }\r\n    if (color.value instanceof Array) {\r\n        return rangeColorToRgb({\r\n            value: itemFromArray(color.value, index, useIndex),\r\n        });\r\n    }\r\n    for (const [, manager] of colorManagers) {\r\n        const res = manager.handleRangeColor(color);\r\n        if (res) {\r\n            return res;\r\n        }\r\n    }\r\n}\r\nexport function colorToRgb(input, index, useIndex = true) {\r\n    if (!input) {\r\n        return;\r\n    }\r\n    const color = typeof input === \"string\" ? { value: input } : input;\r\n    if (typeof color.value === \"string\") {\r\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\r\n    }\r\n    if (color.value instanceof Array) {\r\n        return colorToRgb({\r\n            value: itemFromArray(color.value, index, useIndex),\r\n        });\r\n    }\r\n    for (const [, manager] of colorManagers) {\r\n        const res = manager.handleColor(color);\r\n        if (res) {\r\n            return res;\r\n        }\r\n    }\r\n}\r\nexport function colorToHsl(color, index, useIndex = true) {\r\n    const rgb = colorToRgb(color, index, useIndex);\r\n    return rgb ? rgbToHsl(rgb) : undefined;\r\n}\r\nexport function rangeColorToHsl(color, index, useIndex = true) {\r\n    const rgb = rangeColorToRgb(color, index, useIndex);\r\n    return rgb ? rgbToHsl(rgb) : undefined;\r\n}\r\nexport function rgbToHsl(color) {\r\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\r\n        h: 0,\r\n        l: (max + min) / 2,\r\n        s: 0,\r\n    };\r\n    if (max !== min) {\r\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\r\n        res.h =\r\n            r1 === max\r\n                ? (g1 - b1) / (max - min)\r\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\r\n    }\r\n    res.l *= 100;\r\n    res.s *= 100;\r\n    res.h *= 60;\r\n    if (res.h < 0) {\r\n        res.h += 360;\r\n    }\r\n    if (res.h >= 360) {\r\n        res.h -= 360;\r\n    }\r\n    return res;\r\n}\r\nexport function stringToAlpha(input) {\r\n    return stringToRgba(input)?.a;\r\n}\r\nexport function stringToRgb(input) {\r\n    return stringToRgba(input);\r\n}\r\nexport function hslToRgb(hsl) {\r\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\r\n        h: hsl.h / 360,\r\n        l: hsl.l / 100,\r\n        s: hsl.s / 100,\r\n    };\r\n    if (!hslPercent.s) {\r\n        result.r = result.g = result.b = hslPercent.l;\r\n    }\r\n    else {\r\n        const q = hslPercent.l < 0.5\r\n            ? hslPercent.l * (1 + hslPercent.s)\r\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\r\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\r\n        result.g = hue2rgb(p, q, hslPercent.h);\r\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\r\n    }\r\n    result.r = Math.floor(result.r * 255);\r\n    result.g = Math.floor(result.g * 255);\r\n    result.b = Math.floor(result.b * 255);\r\n    return result;\r\n}\r\nexport function hslaToRgba(hsla) {\r\n    const rgbResult = hslToRgb(hsla);\r\n    return {\r\n        a: hsla.a,\r\n        b: rgbResult.b,\r\n        g: rgbResult.g,\r\n        r: rgbResult.r,\r\n    };\r\n}\r\nexport function getRandomRgbColor(min) {\r\n    const fixedMin = min ?? 0;\r\n    return {\r\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\r\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\r\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\r\n    };\r\n}\r\nexport function getStyleFromRgb(color, opacity) {\r\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\r\n}\r\nexport function getStyleFromHsl(color, opacity) {\r\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\r\n}\r\nexport function colorMix(color1, color2, size1, size2) {\r\n    let rgb1 = color1, rgb2 = color2;\r\n    if (rgb1.r === undefined) {\r\n        rgb1 = hslToRgb(color1);\r\n    }\r\n    if (rgb2.r === undefined) {\r\n        rgb2 = hslToRgb(color2);\r\n    }\r\n    return {\r\n        b: mix(rgb1.b, rgb2.b, size1, size2),\r\n        g: mix(rgb1.g, rgb2.g, size1, size2),\r\n        r: mix(rgb1.r, rgb2.r, size1, size2),\r\n    };\r\n}\r\nexport function getLinkColor(p1, p2, linkColor) {\r\n    if (linkColor === randomColorValue) {\r\n        return getRandomRgbColor();\r\n    }\r\n    else if (linkColor === midColorValue) {\r\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\r\n        if (sourceColor && destColor && p2) {\r\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\r\n        }\r\n        else {\r\n            const hslColor = sourceColor ?? destColor;\r\n            if (hslColor) {\r\n                return hslToRgb(hslColor);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return linkColor;\r\n    }\r\n}\r\nexport function getLinkRandomColor(optColor, blink, consent) {\r\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\r\n    if (color === randomColorValue) {\r\n        if (consent) {\r\n            return rangeColorToRgb({\r\n                value: color,\r\n            });\r\n        }\r\n        if (blink) {\r\n            return randomColorValue;\r\n        }\r\n        return midColorValue;\r\n    }\r\n    else if (color === midColorValue) {\r\n        return midColorValue;\r\n    }\r\n    else {\r\n        return rangeColorToRgb({\r\n            value: color,\r\n        });\r\n    }\r\n}\r\nexport function getHslFromAnimation(animation) {\r\n    return animation !== undefined\r\n        ? {\r\n            h: animation.h.value,\r\n            s: animation.s.value,\r\n            l: animation.l.value,\r\n        }\r\n        : undefined;\r\n}\r\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\r\n    const resColor = {\r\n        h: {\r\n            enable: false,\r\n            value: hsl.h,\r\n        },\r\n        s: {\r\n            enable: false,\r\n            value: hsl.s,\r\n        },\r\n        l: {\r\n            enable: false,\r\n            value: hsl.l,\r\n        },\r\n    };\r\n    if (animationOptions) {\r\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\r\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\r\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\r\n    }\r\n    return resColor;\r\n}\r\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\r\n    colorValue.enable = colorAnimation.enable;\r\n    if (colorValue.enable) {\r\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\r\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\r\n        colorValue.status = \"increasing\";\r\n        colorValue.loops = 0;\r\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\r\n        colorValue.time = 0;\r\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\r\n        if (!colorAnimation.sync) {\r\n            colorValue.velocity *= getRandom();\r\n            colorValue.value *= getRandom();\r\n        }\r\n        colorValue.initialValue = colorValue.value;\r\n    }\r\n    else {\r\n        colorValue.velocity = 0;\r\n    }\r\n}\r\n", "import { getStyleFromRgb } from \"./ColorUtils\";\r\nexport function drawLine(context, begin, end) {\r\n    context.beginPath();\r\n    context.moveTo(begin.x, begin.y);\r\n    context.lineTo(end.x, end.y);\r\n    context.closePath();\r\n}\r\nexport function drawTriangle(context, p1, p2, p3) {\r\n    context.beginPath();\r\n    context.moveTo(p1.x, p1.y);\r\n    context.lineTo(p2.x, p2.y);\r\n    context.lineTo(p3.x, p3.y);\r\n    context.closePath();\r\n}\r\nexport function paintBase(context, dimension, baseColor) {\r\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\r\n    context.fillRect(0, 0, dimension.width, dimension.height);\r\n}\r\nexport function paintImage(context, dimension, image, opacity) {\r\n    if (!image) {\r\n        return;\r\n    }\r\n    context.globalAlpha = opacity;\r\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\r\n    context.globalAlpha = 1;\r\n}\r\nexport function clear(context, dimension) {\r\n    context.clearRect(0, 0, dimension.width, dimension.height);\r\n}\r\nexport function drawParticle(data) {\r\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\r\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\r\n        sin: Math.sin(angle),\r\n        cos: Math.cos(angle),\r\n    }, transformData = {\r\n        a: rotateData.cos * (transform.a ?? 1),\r\n        b: rotateData.sin * (transform.b ?? 1),\r\n        c: -rotateData.sin * (transform.c ?? 1),\r\n        d: rotateData.cos * (transform.d ?? 1),\r\n    };\r\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\r\n    context.beginPath();\r\n    if (backgroundMask) {\r\n        context.globalCompositeOperation = composite;\r\n    }\r\n    const shadowColor = particle.shadowColor;\r\n    if (shadow.enable && shadowColor) {\r\n        context.shadowBlur = shadow.blur;\r\n        context.shadowColor = getStyleFromRgb(shadowColor);\r\n        context.shadowOffsetX = shadow.offset.x;\r\n        context.shadowOffsetY = shadow.offset.y;\r\n    }\r\n    if (colorStyles.fill) {\r\n        context.fillStyle = colorStyles.fill;\r\n    }\r\n    const strokeWidth = particle.strokeWidth ?? 0;\r\n    context.lineWidth = strokeWidth;\r\n    if (colorStyles.stroke) {\r\n        context.strokeStyle = colorStyles.stroke;\r\n    }\r\n    drawShape(container, context, particle, radius, opacity, delta);\r\n    if (strokeWidth > 0) {\r\n        context.stroke();\r\n    }\r\n    if (particle.close) {\r\n        context.closePath();\r\n    }\r\n    if (particle.fill) {\r\n        context.fill();\r\n    }\r\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\r\n    context.globalCompositeOperation = \"source-over\";\r\n    context.setTransform(1, 0, 0, 1, 0, 0);\r\n}\r\nexport function drawShape(container, context, particle, radius, opacity, delta) {\r\n    if (!particle.shape) {\r\n        return;\r\n    }\r\n    const drawer = container.drawers.get(particle.shape);\r\n    if (!drawer) {\r\n        return;\r\n    }\r\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\r\n}\r\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\r\n    if (!particle.shape) {\r\n        return;\r\n    }\r\n    const drawer = container.drawers.get(particle.shape);\r\n    if (!drawer || !drawer.afterEffect) {\r\n        return;\r\n    }\r\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\r\n}\r\nexport function drawPlugin(context, plugin, delta) {\r\n    if (!plugin.draw) {\r\n        return;\r\n    }\r\n    plugin.draw(context, delta);\r\n}\r\nexport function drawParticlePlugin(context, plugin, particle, delta) {\r\n    if (!plugin.drawParticle) {\r\n        return;\r\n    }\r\n    plugin.drawParticle(context, particle, delta);\r\n}\r\nexport function alterHsl(color, type, value) {\r\n    return {\r\n        h: color.h,\r\n        s: color.s,\r\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\r\n    };\r\n}\r\n", "import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\r\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\r\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\r\nimport { generatedAttribute } from \"./Utils/Constants\";\r\nfunction setTransformValue(factor, newFactor, key) {\r\n    const newValue = newFactor[key];\r\n    if (newValue !== undefined) {\r\n        factor[key] = (factor[key] ?? 1) * newValue;\r\n    }\r\n}\r\nexport class Canvas {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this._applyPostDrawUpdaters = (particle) => {\r\n            for (const updater of this._postDrawUpdaters) {\r\n                updater.afterDraw && updater.afterDraw(particle);\r\n            }\r\n        };\r\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\r\n            for (const updater of this._preDrawUpdaters) {\r\n                if (updater.getColorStyles) {\r\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\r\n                    if (fill) {\r\n                        colorStyles.fill = fill;\r\n                    }\r\n                    if (stroke) {\r\n                        colorStyles.stroke = stroke;\r\n                    }\r\n                }\r\n                if (updater.getTransformValues) {\r\n                    const updaterTransform = updater.getTransformValues(particle);\r\n                    for (const key in updaterTransform) {\r\n                        setTransformValue(transform, updaterTransform, key);\r\n                    }\r\n                }\r\n                updater.beforeDraw && updater.beforeDraw(particle);\r\n            }\r\n        };\r\n        this._applyResizePlugins = () => {\r\n            for (const plugin of this._resizePlugins) {\r\n                plugin.resize && plugin.resize();\r\n            }\r\n        };\r\n        this._getPluginParticleColors = (particle) => {\r\n            let fColor, sColor;\r\n            for (const plugin of this._colorPlugins) {\r\n                if (!fColor && plugin.particleFillColor) {\r\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\r\n                }\r\n                if (!sColor && plugin.particleStrokeColor) {\r\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\r\n                }\r\n                if (fColor && sColor) {\r\n                    break;\r\n                }\r\n            }\r\n            return [fColor, sColor];\r\n        };\r\n        this._initCover = () => {\r\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\r\n            if (coverRgb) {\r\n                const coverColor = {\r\n                    ...coverRgb,\r\n                    a: cover.opacity,\r\n                };\r\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\r\n            }\r\n        };\r\n        this._initStyle = () => {\r\n            const element = this.element, options = this.container.actualOptions;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            if (this._fullScreen) {\r\n                this._originalStyle = deepExtend({}, element.style);\r\n                this._setFullScreenStyle();\r\n            }\r\n            else {\r\n                this._resetOriginalStyle();\r\n            }\r\n            for (const key in options.style) {\r\n                if (!key || !options.style) {\r\n                    continue;\r\n                }\r\n                const value = options.style[key];\r\n                if (!value) {\r\n                    continue;\r\n                }\r\n                element.style.setProperty(key, value, \"important\");\r\n            }\r\n        };\r\n        this._initTrail = async () => {\r\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\r\n            if (!trail.enable) {\r\n                return;\r\n            }\r\n            if (trailFill.color) {\r\n                const fillColor = rangeColorToRgb(trailFill.color);\r\n                if (!fillColor) {\r\n                    return;\r\n                }\r\n                const trail = options.particles.move.trail;\r\n                this._trailFill = {\r\n                    color: {\r\n                        ...fillColor,\r\n                    },\r\n                    opacity: 1 / trail.length,\r\n                };\r\n            }\r\n            else {\r\n                await new Promise((resolve, reject) => {\r\n                    if (!trailFill.image) {\r\n                        return;\r\n                    }\r\n                    const img = document.createElement(\"img\");\r\n                    img.addEventListener(\"load\", () => {\r\n                        this._trailFill = {\r\n                            image: img,\r\n                            opacity: 1 / trail.length,\r\n                        };\r\n                        resolve();\r\n                    });\r\n                    img.addEventListener(\"error\", (evt) => {\r\n                        reject(evt.error);\r\n                    });\r\n                    img.src = trailFill.image;\r\n                });\r\n            }\r\n        };\r\n        this._paintBase = (baseColor) => {\r\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\r\n        };\r\n        this._paintImage = (image, opacity) => {\r\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\r\n        };\r\n        this._repairStyle = () => {\r\n            const element = this.element;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            this._safeMutationObserver((observer) => observer.disconnect());\r\n            this._initStyle();\r\n            this.initBackground();\r\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\r\n        };\r\n        this._resetOriginalStyle = () => {\r\n            const element = this.element, originalStyle = this._originalStyle;\r\n            if (!(element && originalStyle)) {\r\n                return;\r\n            }\r\n            const style = element.style;\r\n            style.position = originalStyle.position;\r\n            style.zIndex = originalStyle.zIndex;\r\n            style.top = originalStyle.top;\r\n            style.left = originalStyle.left;\r\n            style.width = originalStyle.width;\r\n            style.height = originalStyle.height;\r\n        };\r\n        this._safeMutationObserver = (callback) => {\r\n            if (!this._mutationObserver) {\r\n                return;\r\n            }\r\n            callback(this._mutationObserver);\r\n        };\r\n        this._setFullScreenStyle = () => {\r\n            const element = this.element;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            const priority = \"important\", style = element.style;\r\n            style.setProperty(\"position\", \"fixed\", priority);\r\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\r\n            style.setProperty(\"top\", \"0\", priority);\r\n            style.setProperty(\"left\", \"0\", priority);\r\n            style.setProperty(\"width\", \"100%\", priority);\r\n            style.setProperty(\"height\", \"100%\", priority);\r\n        };\r\n        this.size = {\r\n            height: 0,\r\n            width: 0,\r\n        };\r\n        this._context = null;\r\n        this._generated = false;\r\n        this._preDrawUpdaters = [];\r\n        this._postDrawUpdaters = [];\r\n        this._resizePlugins = [];\r\n        this._colorPlugins = [];\r\n        this._mutationObserver =\r\n            !isSsr() && typeof MutationObserver !== \"undefined\"\r\n                ? new MutationObserver((records) => {\r\n                    for (const record of records) {\r\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\r\n                            this._repairStyle();\r\n                        }\r\n                    }\r\n                })\r\n                : undefined;\r\n    }\r\n    get _fullScreen() {\r\n        return this.container.actualOptions.fullScreen.enable;\r\n    }\r\n    clear() {\r\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\r\n        if (options.backgroundMask.enable) {\r\n            this.paint();\r\n        }\r\n        else if (trail.enable && trail.length > 0 && trailFill) {\r\n            if (trailFill.color) {\r\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\r\n            }\r\n            else if (trailFill.image) {\r\n                this._paintImage(trailFill.image, trailFill.opacity);\r\n            }\r\n        }\r\n        else {\r\n            this.draw((ctx) => {\r\n                clear(ctx, this.size);\r\n            });\r\n        }\r\n    }\r\n    destroy() {\r\n        this._safeMutationObserver((obs) => obs.disconnect());\r\n        if (this._generated) {\r\n            const element = this.element;\r\n            element && element.remove();\r\n        }\r\n        else {\r\n            this._resetOriginalStyle();\r\n        }\r\n        this.stop();\r\n        this._preDrawUpdaters = [];\r\n        this._postDrawUpdaters = [];\r\n        this._resizePlugins = [];\r\n        this._colorPlugins = [];\r\n    }\r\n    draw(cb) {\r\n        const ctx = this._context;\r\n        if (!ctx) {\r\n            return;\r\n        }\r\n        return cb(ctx);\r\n    }\r\n    drawParticle(particle, delta) {\r\n        if (particle.spawning || particle.destroyed) {\r\n            return;\r\n        }\r\n        const radius = particle.getRadius();\r\n        if (radius <= 0) {\r\n            return;\r\n        }\r\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\r\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\r\n        if (!fColor) {\r\n            fColor = pfColor;\r\n        }\r\n        if (!sColor) {\r\n            sColor = psColor;\r\n        }\r\n        if (!fColor && !sColor) {\r\n            return;\r\n        }\r\n        this.draw((ctx) => {\r\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\r\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\r\n            };\r\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\r\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\r\n            drawParticle({\r\n                container,\r\n                context: ctx,\r\n                particle,\r\n                delta,\r\n                colorStyles,\r\n                backgroundMask: options.backgroundMask.enable,\r\n                composite: options.backgroundMask.composite,\r\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\r\n                opacity: zOpacity,\r\n                shadow: particle.options.shadow,\r\n                transform,\r\n            });\r\n            this._applyPostDrawUpdaters(particle);\r\n        });\r\n    }\r\n    drawParticlePlugin(plugin, particle, delta) {\r\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\r\n    }\r\n    drawPlugin(plugin, delta) {\r\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\r\n    }\r\n    async init() {\r\n        this.resize();\r\n        this._initStyle();\r\n        this._initCover();\r\n        try {\r\n            await this._initTrail();\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n        this.initBackground();\r\n        this._safeMutationObserver((obs) => {\r\n            if (!this.element) {\r\n                return;\r\n            }\r\n            obs.observe(this.element, { attributes: true });\r\n        });\r\n        this.initUpdaters();\r\n        this.initPlugins();\r\n        this.paint();\r\n    }\r\n    initBackground() {\r\n        const options = this.container.actualOptions, background = options.background, element = this.element;\r\n        if (!element) {\r\n            return;\r\n        }\r\n        const elementStyle = element.style;\r\n        if (!elementStyle) {\r\n            return;\r\n        }\r\n        if (background.color) {\r\n            const color = rangeColorToRgb(background.color);\r\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\r\n        }\r\n        else {\r\n            elementStyle.backgroundColor = \"\";\r\n        }\r\n        elementStyle.backgroundImage = background.image || \"\";\r\n        elementStyle.backgroundPosition = background.position || \"\";\r\n        elementStyle.backgroundRepeat = background.repeat || \"\";\r\n        elementStyle.backgroundSize = background.size || \"\";\r\n    }\r\n    initPlugins() {\r\n        this._resizePlugins = [];\r\n        for (const [, plugin] of this.container.plugins) {\r\n            if (plugin.resize) {\r\n                this._resizePlugins.push(plugin);\r\n            }\r\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\r\n                this._colorPlugins.push(plugin);\r\n            }\r\n        }\r\n    }\r\n    initUpdaters() {\r\n        this._preDrawUpdaters = [];\r\n        this._postDrawUpdaters = [];\r\n        for (const updater of this.container.particles.updaters) {\r\n            if (updater.afterDraw) {\r\n                this._postDrawUpdaters.push(updater);\r\n            }\r\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\r\n                this._preDrawUpdaters.push(updater);\r\n            }\r\n        }\r\n    }\r\n    loadCanvas(canvas) {\r\n        if (this._generated && this.element) {\r\n            this.element.remove();\r\n        }\r\n        this._generated =\r\n            canvas.dataset && generatedAttribute in canvas.dataset\r\n                ? canvas.dataset[generatedAttribute] === \"true\"\r\n                : this._generated;\r\n        this.element = canvas;\r\n        this.element.ariaHidden = \"true\";\r\n        this._originalStyle = deepExtend({}, this.element.style);\r\n        this.size.height = canvas.offsetHeight;\r\n        this.size.width = canvas.offsetWidth;\r\n        this._context = this.element.getContext(\"2d\");\r\n        this._safeMutationObserver((obs) => {\r\n            if (!this.element) {\r\n                return;\r\n            }\r\n            obs.observe(this.element, { attributes: true });\r\n        });\r\n        this.container.retina.init();\r\n        this.initBackground();\r\n    }\r\n    paint() {\r\n        const options = this.container.actualOptions;\r\n        this.draw((ctx) => {\r\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\r\n                clear(ctx, this.size);\r\n                this._paintBase(this._coverColorStyle);\r\n            }\r\n            else {\r\n                this._paintBase();\r\n            }\r\n        });\r\n    }\r\n    resize() {\r\n        if (!this.element) {\r\n            return false;\r\n        }\r\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\r\n            width: this.element.offsetWidth * pxRatio,\r\n            height: this.element.offsetHeight * pxRatio,\r\n        };\r\n        if (newSize.height === size.height &&\r\n            newSize.width === size.width &&\r\n            newSize.height === this.element.height &&\r\n            newSize.width === this.element.width) {\r\n            return false;\r\n        }\r\n        const oldSize = { ...size };\r\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\r\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\r\n        if (this.container.started) {\r\n            this.resizeFactor = {\r\n                width: size.width / oldSize.width,\r\n                height: size.height / oldSize.height,\r\n            };\r\n        }\r\n        return true;\r\n    }\r\n    stop() {\r\n        this.draw((ctx) => clear(ctx, this.size));\r\n    }\r\n    async windowResize() {\r\n        if (!this.element || !this.resize()) {\r\n            return;\r\n        }\r\n        const container = this.container, needsRefresh = container.updateActualOptions();\r\n        container.particles.setDensity();\r\n        this._applyResizePlugins();\r\n        if (needsRefresh) {\r\n            await container.refresh();\r\n        }\r\n    }\r\n}\r\n", "import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\r\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\r\nfunction manageListener(element, event, handler, add, options) {\r\n    if (add) {\r\n        let addOptions = { passive: true };\r\n        if (typeof options === \"boolean\") {\r\n            addOptions.capture = options;\r\n        }\r\n        else if (options !== undefined) {\r\n            addOptions = options;\r\n        }\r\n        element.addEventListener(event, handler, addOptions);\r\n    }\r\n    else {\r\n        const removeOptions = options;\r\n        element.removeEventListener(event, handler, removeOptions);\r\n    }\r\n}\r\nexport class EventListeners {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this._doMouseTouchClick = (e) => {\r\n            const container = this.container, options = container.actualOptions;\r\n            if (this._canPush) {\r\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\r\n                if (!mousePos) {\r\n                    return;\r\n                }\r\n                mouseInteractivity.clickPosition = { ...mousePos };\r\n                mouseInteractivity.clickTime = new Date().getTime();\r\n                const onClick = options.interactivity.events.onClick;\r\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\r\n            }\r\n            if (e.type === \"touchend\") {\r\n                setTimeout(() => this._mouseTouchFinish(), 500);\r\n            }\r\n        };\r\n        this._handleThemeChange = (e) => {\r\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\r\n            if (theme && theme.default.auto) {\r\n                container.loadTheme(themeName);\r\n            }\r\n        };\r\n        this._handleVisibilityChange = () => {\r\n            const container = this.container, options = container.actualOptions;\r\n            this._mouseTouchFinish();\r\n            if (!options.pauseOnBlur) {\r\n                return;\r\n            }\r\n            if (document && document.hidden) {\r\n                container.pageHidden = true;\r\n                container.pause();\r\n            }\r\n            else {\r\n                container.pageHidden = false;\r\n                if (container.getAnimationStatus()) {\r\n                    container.play(true);\r\n                }\r\n                else {\r\n                    container.draw(true);\r\n                }\r\n            }\r\n        };\r\n        this._handleWindowResize = async () => {\r\n            if (this._resizeTimeout) {\r\n                clearTimeout(this._resizeTimeout);\r\n                delete this._resizeTimeout;\r\n            }\r\n            this._resizeTimeout = setTimeout(async () => {\r\n                const canvas = this.container.canvas;\r\n                canvas && (await canvas.windowResize());\r\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\r\n        };\r\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\r\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\r\n            const interactivityEl = container.interactivity.element;\r\n            if (!interactivityEl) {\r\n                return;\r\n            }\r\n            const html = interactivityEl, canvasEl = container.canvas.element;\r\n            if (canvasEl) {\r\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\r\n            }\r\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\r\n                return;\r\n            }\r\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\r\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\r\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\r\n            if (!options.interactivity.events.onClick.enable) {\r\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\r\n            }\r\n            else {\r\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\r\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\r\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\r\n            }\r\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\r\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\r\n        };\r\n        this._manageListeners = (add) => {\r\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\r\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\r\n            if (detectType === \"window\") {\r\n                container.interactivity.element = window;\r\n                mouseLeaveTmpEvent = mouseOutEvent;\r\n            }\r\n            else if (detectType === \"parent\" && canvasEl) {\r\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\r\n            }\r\n            else {\r\n                container.interactivity.element = canvasEl;\r\n            }\r\n            this._manageMediaMatch(add);\r\n            this._manageResize(add);\r\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\r\n            if (document) {\r\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\r\n            }\r\n        };\r\n        this._manageMediaMatch = (add) => {\r\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\r\n            if (!mediaMatch) {\r\n                return;\r\n            }\r\n            if (mediaMatch.addEventListener !== undefined) {\r\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\r\n                return;\r\n            }\r\n            if (mediaMatch.addListener === undefined) {\r\n                return;\r\n            }\r\n            if (add) {\r\n                mediaMatch.addListener(handlers.oldThemeChange);\r\n            }\r\n            else {\r\n                mediaMatch.removeListener(handlers.oldThemeChange);\r\n            }\r\n        };\r\n        this._manageResize = (add) => {\r\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\r\n            if (!options.interactivity.events.resize) {\r\n                return;\r\n            }\r\n            if (typeof ResizeObserver === \"undefined\") {\r\n                manageListener(window, resizeEvent, handlers.resize, add);\r\n                return;\r\n            }\r\n            const canvasEl = container.canvas.element;\r\n            if (this._resizeObserver && !add) {\r\n                if (canvasEl) {\r\n                    this._resizeObserver.unobserve(canvasEl);\r\n                }\r\n                this._resizeObserver.disconnect();\r\n                delete this._resizeObserver;\r\n            }\r\n            else if (!this._resizeObserver && add && canvasEl) {\r\n                this._resizeObserver = new ResizeObserver(async (entries) => {\r\n                    const entry = entries.find((e) => e.target === canvasEl);\r\n                    if (!entry) {\r\n                        return;\r\n                    }\r\n                    await this._handleWindowResize();\r\n                });\r\n                this._resizeObserver.observe(canvasEl);\r\n            }\r\n        };\r\n        this._mouseDown = () => {\r\n            const { interactivity } = this.container;\r\n            if (!interactivity) {\r\n                return;\r\n            }\r\n            const { mouse } = interactivity;\r\n            mouse.clicking = true;\r\n            mouse.downPosition = mouse.position;\r\n        };\r\n        this._mouseTouchClick = (e) => {\r\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\r\n            mouse.inside = true;\r\n            let handled = false;\r\n            const mousePosition = mouse.position;\r\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\r\n                return;\r\n            }\r\n            for (const [, plugin] of container.plugins) {\r\n                if (!plugin.clickPositionValid) {\r\n                    continue;\r\n                }\r\n                handled = plugin.clickPositionValid(mousePosition);\r\n                if (handled) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!handled) {\r\n                this._doMouseTouchClick(e);\r\n            }\r\n            mouse.clicking = false;\r\n        };\r\n        this._mouseTouchFinish = () => {\r\n            const interactivity = this.container.interactivity;\r\n            if (!interactivity) {\r\n                return;\r\n            }\r\n            const mouse = interactivity.mouse;\r\n            delete mouse.position;\r\n            delete mouse.clickPosition;\r\n            delete mouse.downPosition;\r\n            interactivity.status = mouseLeaveEvent;\r\n            mouse.inside = false;\r\n            mouse.clicking = false;\r\n        };\r\n        this._mouseTouchMove = (e) => {\r\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\r\n            if (!interactivity || !interactivity.element) {\r\n                return;\r\n            }\r\n            interactivity.mouse.inside = true;\r\n            let pos;\r\n            if (e.type.startsWith(\"pointer\")) {\r\n                this._canPush = true;\r\n                const mouseEvent = e;\r\n                if (interactivity.element === window) {\r\n                    if (canvasEl) {\r\n                        const clientRect = canvasEl.getBoundingClientRect();\r\n                        pos = {\r\n                            x: mouseEvent.clientX - clientRect.left,\r\n                            y: mouseEvent.clientY - clientRect.top,\r\n                        };\r\n                    }\r\n                }\r\n                else if (options.interactivity.detectsOn === \"parent\") {\r\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\r\n                    if (source && target && canvasEl) {\r\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\r\n                        pos = {\r\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\r\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\r\n                        };\r\n                    }\r\n                    else {\r\n                        pos = {\r\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\r\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\r\n                        };\r\n                    }\r\n                }\r\n                else if (mouseEvent.target === canvasEl) {\r\n                    pos = {\r\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\r\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\r\n                    };\r\n                }\r\n            }\r\n            else {\r\n                this._canPush = e.type !== \"touchmove\";\r\n                if (canvasEl) {\r\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\r\n                    pos = {\r\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\r\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\r\n                    };\r\n                }\r\n            }\r\n            const pxRatio = container.retina.pixelRatio;\r\n            if (pos) {\r\n                pos.x *= pxRatio;\r\n                pos.y *= pxRatio;\r\n            }\r\n            interactivity.mouse.position = pos;\r\n            interactivity.status = mouseMoveEvent;\r\n        };\r\n        this._touchEnd = (e) => {\r\n            const evt = e, touches = Array.from(evt.changedTouches);\r\n            for (const touch of touches) {\r\n                this._touches.delete(touch.identifier);\r\n            }\r\n            this._mouseTouchFinish();\r\n        };\r\n        this._touchEndClick = (e) => {\r\n            const evt = e, touches = Array.from(evt.changedTouches);\r\n            for (const touch of touches) {\r\n                this._touches.delete(touch.identifier);\r\n            }\r\n            this._mouseTouchClick(e);\r\n        };\r\n        this._touchStart = (e) => {\r\n            const evt = e, touches = Array.from(evt.changedTouches);\r\n            for (const touch of touches) {\r\n                this._touches.set(touch.identifier, performance.now());\r\n            }\r\n            this._mouseTouchMove(e);\r\n        };\r\n        this._canPush = true;\r\n        this._touches = new Map();\r\n        this._handlers = {\r\n            mouseDown: () => this._mouseDown(),\r\n            mouseLeave: () => this._mouseTouchFinish(),\r\n            mouseMove: (e) => this._mouseTouchMove(e),\r\n            mouseUp: (e) => this._mouseTouchClick(e),\r\n            touchStart: (e) => this._touchStart(e),\r\n            touchMove: (e) => this._mouseTouchMove(e),\r\n            touchEnd: (e) => this._touchEnd(e),\r\n            touchCancel: (e) => this._touchEnd(e),\r\n            touchEndClick: (e) => this._touchEndClick(e),\r\n            visibilityChange: () => this._handleVisibilityChange(),\r\n            themeChange: (e) => this._handleThemeChange(e),\r\n            oldThemeChange: (e) => this._handleThemeChange(e),\r\n            resize: () => {\r\n                this._handleWindowResize();\r\n            },\r\n        };\r\n    }\r\n    addListeners() {\r\n        this._manageListeners(true);\r\n    }\r\n    removeListeners() {\r\n        this._manageListeners(false);\r\n    }\r\n}\r\n", "import { errorPrefix } from \"./Constants\";\r\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\r\n    return {\r\n        value,\r\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\r\n    };\r\n}\r\nexport class FrameManager {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    async nextFrame(timestamp) {\r\n        try {\r\n            const container = this.container;\r\n            if (!container.smooth &&\r\n                container.lastFrameTime !== undefined &&\r\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\r\n                container.draw(false);\r\n                return;\r\n            }\r\n            container.lastFrameTime ??= timestamp;\r\n            const delta = initDelta(timestamp - container.lastFrameTime, container.fpsLimit, container.smooth);\r\n            container.addLifeTime(delta.value);\r\n            container.lastFrameTime = timestamp;\r\n            if (delta.value > 1000) {\r\n                container.draw(false);\r\n                return;\r\n            }\r\n            await container.particles.draw(delta);\r\n            if (!container.alive()) {\r\n                container.destroy();\r\n                return;\r\n            }\r\n            if (container.getAnimationStatus()) {\r\n                container.draw(false);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error(`${errorPrefix} in animation loop`, e);\r\n        }\r\n    }\r\n}\r\n", "export class OptionsColor {\r\n    constructor() {\r\n        this.value = \"\";\r\n    }\r\n    static create(source, data) {\r\n        const color = new OptionsColor();\r\n        color.load(source);\r\n        if (data !== undefined) {\r\n            if (typeof data === \"string\" || data instanceof Array) {\r\n                color.load({ value: data });\r\n            }\r\n            else {\r\n                color.load(data);\r\n            }\r\n        }\r\n        return color;\r\n    }\r\n    load(data) {\r\n        if (data?.value === undefined) {\r\n            return;\r\n        }\r\n        this.value = data.value;\r\n    }\r\n}\r\n", "import { OptionsColor } from \"../OptionsColor\";\r\nexport class Background {\r\n    constructor() {\r\n        this.color = new OptionsColor();\r\n        this.color.value = \"\";\r\n        this.image = \"\";\r\n        this.position = \"\";\r\n        this.repeat = \"\";\r\n        this.size = \"\";\r\n        this.opacity = 1;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.color !== undefined) {\r\n            this.color = OptionsColor.create(this.color, data.color);\r\n        }\r\n        if (data.image !== undefined) {\r\n            this.image = data.image;\r\n        }\r\n        if (data.position !== undefined) {\r\n            this.position = data.position;\r\n        }\r\n        if (data.repeat !== undefined) {\r\n            this.repeat = data.repeat;\r\n        }\r\n        if (data.size !== undefined) {\r\n            this.size = data.size;\r\n        }\r\n        if (data.opacity !== undefined) {\r\n            this.opacity = data.opacity;\r\n        }\r\n    }\r\n}\r\n", "import { OptionsColor } from \"../OptionsColor\";\r\nexport class BackgroundMaskCover {\r\n    constructor() {\r\n        this.color = new OptionsColor();\r\n        this.color.value = \"#fff\";\r\n        this.opacity = 1;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.color !== undefined) {\r\n            this.color = OptionsColor.create(this.color, data.color);\r\n        }\r\n        if (data.opacity !== undefined) {\r\n            this.opacity = data.opacity;\r\n        }\r\n    }\r\n}\r\n", "import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\r\nexport class BackgroundMask {\r\n    constructor() {\r\n        this.composite = \"destination-out\";\r\n        this.cover = new BackgroundMaskCover();\r\n        this.enable = false;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.composite !== undefined) {\r\n            this.composite = data.composite;\r\n        }\r\n        if (data.cover !== undefined) {\r\n            const cover = data.cover;\r\n            const color = (typeof data.cover === \"string\" ? { color: data.cover } : data.cover);\r\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n    }\r\n}\r\n", "export class FullScreen {\r\n    constructor() {\r\n        this.enable = true;\r\n        this.zIndex = 0;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.zIndex !== undefined) {\r\n            this.zIndex = data.zIndex;\r\n        }\r\n    }\r\n}\r\n", "export class ClickEvent {\r\n    constructor() {\r\n        this.enable = false;\r\n        this.mode = [];\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n    }\r\n}\r\n", "import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\r\nexport class DivEvent {\r\n    constructor() {\r\n        this.selectors = [];\r\n        this.enable = false;\r\n        this.mode = [];\r\n        this.type = \"circle\";\r\n    }\r\n    get el() {\r\n        return this.elementId;\r\n    }\r\n    set el(value) {\r\n        this.elementId = value;\r\n    }\r\n    get elementId() {\r\n        return this.ids;\r\n    }\r\n    set elementId(value) {\r\n        this.ids = value;\r\n    }\r\n    get ids() {\r\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\r\n    }\r\n    set ids(value) {\r\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        const ids = data.ids ?? data.elementId ?? data.el;\r\n        if (ids !== undefined) {\r\n            this.ids = ids;\r\n        }\r\n        if (data.selectors !== undefined) {\r\n            this.selectors = data.selectors;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        if (data.type !== undefined) {\r\n            this.type = data.type;\r\n        }\r\n    }\r\n}\r\n", "export class Parallax {\r\n    constructor() {\r\n        this.enable = false;\r\n        this.force = 2;\r\n        this.smooth = 10;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.force !== undefined) {\r\n            this.force = data.force;\r\n        }\r\n        if (data.smooth !== undefined) {\r\n            this.smooth = data.smooth;\r\n        }\r\n    }\r\n}\r\n", "import { Parallax } from \"./Parallax\";\r\nexport class HoverEvent {\r\n    constructor() {\r\n        this.enable = false;\r\n        this.mode = [];\r\n        this.parallax = new Parallax();\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        this.parallax.load(data.parallax);\r\n    }\r\n}\r\n", "export class ResizeEvent {\r\n    constructor() {\r\n        this.delay = 0.5;\r\n        this.enable = true;\r\n    }\r\n    load(data) {\r\n        if (data === undefined) {\r\n            return;\r\n        }\r\n        if (data.delay !== undefined) {\r\n            this.delay = data.delay;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n    }\r\n}\r\n", "import { ClickEvent } from \"./ClickEvent\";\r\nimport { DivEvent } from \"./DivEvent\";\r\nimport { HoverEvent } from \"./HoverEvent\";\r\nimport { ResizeEvent } from \"./ResizeEvent\";\r\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\r\nexport class Events {\r\n    constructor() {\r\n        this.onClick = new ClickEvent();\r\n        this.onDiv = new DivEvent();\r\n        this.onHover = new HoverEvent();\r\n        this.resize = new ResizeEvent();\r\n    }\r\n    get onclick() {\r\n        return this.onClick;\r\n    }\r\n    set onclick(value) {\r\n        this.onClick = value;\r\n    }\r\n    get ondiv() {\r\n        return this.onDiv;\r\n    }\r\n    set ondiv(value) {\r\n        this.onDiv = value;\r\n    }\r\n    get onhover() {\r\n        return this.onHover;\r\n    }\r\n    set onhover(value) {\r\n        this.onHover = value;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.onClick.load(data.onClick ?? data.onclick);\r\n        const onDiv = data.onDiv ?? data.ondiv;\r\n        if (onDiv !== undefined) {\r\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\r\n                const tmp = new DivEvent();\r\n                tmp.load(t);\r\n                return tmp;\r\n            });\r\n        }\r\n        this.onHover.load(data.onHover ?? data.onhover);\r\n        if (typeof data.resize === \"boolean\") {\r\n            this.resize.enable = data.resize;\r\n        }\r\n        else {\r\n            this.resize.load(data.resize);\r\n        }\r\n    }\r\n}\r\n", "export class Modes {\r\n    constructor(engine, container) {\r\n        this._engine = engine;\r\n        this._container = container;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (!this._container) {\r\n            return;\r\n        }\r\n        const interactors = this._engine.plugins.interactors.get(this._container);\r\n        if (!interactors) {\r\n            return;\r\n        }\r\n        for (const interactor of interactors) {\r\n            if (!interactor.loadModeOptions) {\r\n                continue;\r\n            }\r\n            interactor.loadModeOptions(this, data);\r\n        }\r\n    }\r\n}\r\n", "import { Events } from \"./Events/Events\";\r\nimport { Modes } from \"./Modes/Modes\";\r\nexport class Interactivity {\r\n    constructor(engine, container) {\r\n        this.detectsOn = \"window\";\r\n        this.events = new Events();\r\n        this.modes = new Modes(engine, container);\r\n    }\r\n    get detect_on() {\r\n        return this.detectsOn;\r\n    }\r\n    set detect_on(value) {\r\n        this.detectsOn = value;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        const detectsOn = data.detectsOn ?? data.detect_on;\r\n        if (detectsOn !== undefined) {\r\n            this.detectsOn = detectsOn;\r\n        }\r\n        this.events.load(data.events);\r\n        this.modes.load(data.modes);\r\n    }\r\n}\r\n", "import { deepExtend } from \"../../Utils/Utils\";\r\nexport class ManualParticle {\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.position) {\r\n            this.position = {\r\n                x: data.position.x ?? 50,\r\n                y: data.position.y ?? 50,\r\n                mode: data.position.mode ?? \"percent\",\r\n            };\r\n        }\r\n        if (data.options) {\r\n            this.options = deepExtend({}, data.options);\r\n        }\r\n    }\r\n}\r\n", "import { deepExtend } from \"../../Utils/Utils\";\r\nexport class Responsive {\r\n    constructor() {\r\n        this.maxWidth = Infinity;\r\n        this.options = {};\r\n        this.mode = \"canvas\";\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.maxWidth !== undefined) {\r\n            this.maxWidth = data.maxWidth;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            if (data.mode === \"screen\") {\r\n                this.mode = \"screen\";\r\n            }\r\n            else {\r\n                this.mode = \"canvas\";\r\n            }\r\n        }\r\n        if (data.options !== undefined) {\r\n            this.options = deepExtend({}, data.options);\r\n        }\r\n    }\r\n}\r\n", "export class ThemeDefault {\r\n    constructor() {\r\n        this.auto = false;\r\n        this.mode = \"any\";\r\n        this.value = false;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.auto !== undefined) {\r\n            this.auto = data.auto;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        if (data.value !== undefined) {\r\n            this.value = data.value;\r\n        }\r\n    }\r\n}\r\n", "import { ThemeDefault } from \"./ThemeDefault\";\r\nimport { deepExtend } from \"../../../Utils/Utils\";\r\nexport class Theme {\r\n    constructor() {\r\n        this.name = \"\";\r\n        this.default = new ThemeDefault();\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.name !== undefined) {\r\n            this.name = data.name;\r\n        }\r\n        this.default.load(data.default);\r\n        if (data.options !== undefined) {\r\n            this.options = deepExtend({}, data.options);\r\n        }\r\n    }\r\n}\r\n", "import { setRangeValue } from \"../../Utils/NumberUtils\";\r\nexport class ColorAnimation {\r\n    constructor() {\r\n        this.count = 0;\r\n        this.enable = false;\r\n        this.offset = 0;\r\n        this.speed = 1;\r\n        this.delay = 0;\r\n        this.decay = 0;\r\n        this.sync = true;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.count !== undefined) {\r\n            this.count = setRangeValue(data.count);\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.offset !== undefined) {\r\n            this.offset = setRangeValue(data.offset);\r\n        }\r\n        if (data.speed !== undefined) {\r\n            this.speed = setRangeValue(data.speed);\r\n        }\r\n        if (data.decay !== undefined) {\r\n            this.decay = setRangeValue(data.decay);\r\n        }\r\n        if (data.delay !== undefined) {\r\n            this.delay = setRangeValue(data.delay);\r\n        }\r\n        if (data.sync !== undefined) {\r\n            this.sync = data.sync;\r\n        }\r\n    }\r\n}\r\n", "import { ColorAnimation } from \"./ColorAnimation\";\r\nexport class HslAnimation {\r\n    constructor() {\r\n        this.h = new ColorAnimation();\r\n        this.s = new ColorAnimation();\r\n        this.l = new ColorAnimation();\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.h.load(data.h);\r\n        this.s.load(data.s);\r\n        this.l.load(data.l);\r\n    }\r\n}\r\n", "import { HslAnimation } from \"./HslAnimation\";\r\nimport { OptionsColor } from \"./OptionsColor\";\r\nexport class AnimatableColor extends OptionsColor {\r\n    constructor() {\r\n        super();\r\n        this.animation = new HslAnimation();\r\n    }\r\n    static create(source, data) {\r\n        const color = new AnimatableColor();\r\n        color.load(source);\r\n        if (data !== undefined) {\r\n            if (typeof data === \"string\" || data instanceof Array) {\r\n                color.load({ value: data });\r\n            }\r\n            else {\r\n                color.load(data);\r\n            }\r\n        }\r\n        return color;\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (!data) {\r\n            return;\r\n        }\r\n        const colorAnimation = data.animation;\r\n        if (colorAnimation !== undefined) {\r\n            if (colorAnimation.enable !== undefined) {\r\n                this.animation.h.load(colorAnimation);\r\n            }\r\n            else {\r\n                this.animation.load(data.animation);\r\n            }\r\n        }\r\n    }\r\n}\r\n", "export class CollisionsAbsorb {\r\n    constructor() {\r\n        this.speed = 2;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.speed !== undefined) {\r\n            this.speed = data.speed;\r\n        }\r\n    }\r\n}\r\n", "export class CollisionsOverlap {\r\n    constructor() {\r\n        this.enable = true;\r\n        this.retries = 0;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.retries !== undefined) {\r\n            this.retries = data.retries;\r\n        }\r\n    }\r\n}\r\n", "import { setRangeValue } from \"../../Utils/NumberUtils\";\r\nexport class AnimationOptions {\r\n    constructor() {\r\n        this.count = 0;\r\n        this.enable = false;\r\n        this.speed = 1;\r\n        this.decay = 0;\r\n        this.delay = 0;\r\n        this.sync = false;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.count !== undefined) {\r\n            this.count = setRangeValue(data.count);\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.speed !== undefined) {\r\n            this.speed = setRangeValue(data.speed);\r\n        }\r\n        if (data.decay !== undefined) {\r\n            this.decay = setRangeValue(data.decay);\r\n        }\r\n        if (data.delay !== undefined) {\r\n            this.delay = setRangeValue(data.delay);\r\n        }\r\n        if (data.sync !== undefined) {\r\n            this.sync = data.sync;\r\n        }\r\n    }\r\n}\r\nexport class RangedAnimationOptions extends AnimationOptions {\r\n    constructor() {\r\n        super();\r\n        this.mode = \"auto\";\r\n        this.startValue = \"random\";\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.minimumValue !== undefined) {\r\n            this.minimumValue = data.minimumValue;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        if (data.startValue !== undefined) {\r\n            this.startValue = data.startValue;\r\n        }\r\n    }\r\n}\r\n", "export class Random {\r\n    constructor() {\r\n        this.enable = false;\r\n        this.minimumValue = 0;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.minimumValue !== undefined) {\r\n            this.minimumValue = data.minimumValue;\r\n        }\r\n    }\r\n}\r\n", "import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\r\nimport { Random } from \"./Random\";\r\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\r\nexport class ValueWithRandom {\r\n    constructor() {\r\n        this.random = new Random();\r\n        this.value = 0;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (typeof data.random === \"boolean\") {\r\n            this.random.enable = data.random;\r\n        }\r\n        else {\r\n            this.random.load(data.random);\r\n        }\r\n        if (data.value !== undefined) {\r\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\r\n        }\r\n    }\r\n}\r\nexport class AnimationValueWithRandom extends ValueWithRandom {\r\n    constructor() {\r\n        super();\r\n        this.animation = new AnimationOptions();\r\n    }\r\n    get anim() {\r\n        return this.animation;\r\n    }\r\n    set anim(value) {\r\n        this.animation = value;\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (!data) {\r\n            return;\r\n        }\r\n        const animation = data.animation ?? data.anim;\r\n        if (animation !== undefined) {\r\n            this.animation.load(animation);\r\n        }\r\n    }\r\n}\r\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\r\n    constructor() {\r\n        super();\r\n        this.animation = new RangedAnimationOptions();\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (!data) {\r\n            return;\r\n        }\r\n        const animation = data.animation ?? data.anim;\r\n        if (animation !== undefined) {\r\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\r\n        }\r\n    }\r\n}\r\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\r\nexport class ParticlesBounceFactor extends ValueWithRandom {\r\n    constructor() {\r\n        super();\r\n        this.random.minimumValue = 0.1;\r\n        this.value = 1;\r\n    }\r\n}\r\n", "import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\r\nexport class ParticlesBounce {\r\n    constructor() {\r\n        this.horizontal = new ParticlesBounceFactor();\r\n        this.vertical = new ParticlesBounceFactor();\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.horizontal.load(data.horizontal);\r\n        this.vertical.load(data.vertical);\r\n    }\r\n}\r\n", "import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\r\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\r\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\r\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\r\nexport class Collisions {\r\n    constructor() {\r\n        this.absorb = new CollisionsAbsorb();\r\n        this.bounce = new ParticlesBounce();\r\n        this.enable = false;\r\n        this.maxSpeed = 50;\r\n        this.mode = \"bounce\";\r\n        this.overlap = new CollisionsOverlap();\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.absorb.load(data.absorb);\r\n        this.bounce.load(data.bounce);\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.maxSpeed !== undefined) {\r\n            this.maxSpeed = setRangeValue(data.maxSpeed);\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        this.overlap.load(data.overlap);\r\n    }\r\n}\r\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\r\nexport class MoveAngle {\r\n    constructor() {\r\n        this.offset = 0;\r\n        this.value = 90;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.offset !== undefined) {\r\n            this.offset = setRangeValue(data.offset);\r\n        }\r\n        if (data.value !== undefined) {\r\n            this.value = setRangeValue(data.value);\r\n        }\r\n    }\r\n}\r\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\r\nexport class MoveAttract {\r\n    constructor() {\r\n        this.distance = 200;\r\n        this.enable = false;\r\n        this.rotate = {\r\n            x: 3000,\r\n            y: 3000,\r\n        };\r\n    }\r\n    get rotateX() {\r\n        return this.rotate.x;\r\n    }\r\n    set rotateX(value) {\r\n        this.rotate.x = value;\r\n    }\r\n    get rotateY() {\r\n        return this.rotate.y;\r\n    }\r\n    set rotateY(value) {\r\n        this.rotate.y = value;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.distance !== undefined) {\r\n            this.distance = setRangeValue(data.distance);\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        const rotateX = data.rotate?.x ?? data.rotateX;\r\n        if (rotateX !== undefined) {\r\n            this.rotate.x = rotateX;\r\n        }\r\n        const rotateY = data.rotate?.y ?? data.rotateY;\r\n        if (rotateY !== undefined) {\r\n            this.rotate.y = rotateY;\r\n        }\r\n    }\r\n}\r\n", "export class MoveCenter {\r\n    constructor() {\r\n        this.x = 50;\r\n        this.y = 50;\r\n        this.mode = \"percent\";\r\n        this.radius = 0;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.x !== undefined) {\r\n            this.x = data.x;\r\n        }\r\n        if (data.y !== undefined) {\r\n            this.y = data.y;\r\n        }\r\n        if (data.mode !== undefined) {\r\n            this.mode = data.mode;\r\n        }\r\n        if (data.radius !== undefined) {\r\n            this.radius = data.radius;\r\n        }\r\n    }\r\n}\r\n", "import { setRangeValue } from \"../../../../Utils/NumberUtils\";\r\nexport class MoveGravity {\r\n    constructor() {\r\n        this.acceleration = 9.81;\r\n        this.enable = false;\r\n        this.inverse = false;\r\n        this.maxSpeed = 50;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.acceleration !== undefined) {\r\n            this.acceleration = setRangeValue(data.acceleration);\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.inverse !== undefined) {\r\n            this.inverse = data.inverse;\r\n        }\r\n        if (data.maxSpeed !== undefined) {\r\n            this.maxSpeed = setRangeValue(data.maxSpeed);\r\n        }\r\n    }\r\n}\r\n", "import { ValueWithRandom } from \"../../../ValueWithRandom\";\r\nimport { deepExtend } from \"../../../../../Utils/Utils\";\r\nexport class MovePath {\r\n    constructor() {\r\n        this.clamp = true;\r\n        this.delay = new ValueWithRandom();\r\n        this.enable = false;\r\n        this.options = {};\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.clamp !== undefined) {\r\n            this.clamp = data.clamp;\r\n        }\r\n        this.delay.load(data.delay);\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        this.generator = data.generator;\r\n        if (data.options) {\r\n            this.options = deepExtend(this.options, data.options);\r\n        }\r\n    }\r\n}\r\n", "import { OptionsColor } from \"../../OptionsColor\";\r\nexport class MoveTrailFill {\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.color !== undefined) {\r\n            this.color = OptionsColor.create(this.color, data.color);\r\n        }\r\n        if (data.image !== undefined) {\r\n            this.image = data.image;\r\n        }\r\n    }\r\n}\r\n", "import { MoveTrailFill } from \"./MoveTrailFill\";\r\nexport class MoveTrail {\r\n    constructor() {\r\n        this.enable = false;\r\n        this.length = 10;\r\n        this.fill = new MoveTrailFill();\r\n    }\r\n    get fillColor() {\r\n        return this.fill.color;\r\n    }\r\n    set fillColor(value) {\r\n        this.fill.load({ color: value });\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.fill !== undefined || data.fillColor !== undefined) {\r\n            this.fill.load(data.fill || { color: data.fillColor });\r\n        }\r\n        if (data.length !== undefined) {\r\n            this.length = data.length;\r\n        }\r\n    }\r\n}\r\n", "export class OutModes {\r\n    constructor() {\r\n        this.default = \"out\";\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.default !== undefined) {\r\n            this.default = data.default;\r\n        }\r\n        this.bottom = data.bottom ?? data.default;\r\n        this.left = data.left ?? data.default;\r\n        this.right = data.right ?? data.default;\r\n        this.top = data.top ?? data.default;\r\n    }\r\n}\r\n", "import { deepExtend } from \"../../../../Utils/Utils\";\r\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\r\nexport class Spin {\r\n    constructor() {\r\n        this.acceleration = 0;\r\n        this.enable = false;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.acceleration !== undefined) {\r\n            this.acceleration = setRangeValue(data.acceleration);\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.position) {\r\n            this.position = deepExtend({}, data.position);\r\n        }\r\n    }\r\n}\r\n", "import { MoveAngle } from \"./MoveAngle\";\r\nimport { MoveAttract } from \"./MoveAttract\";\r\nimport { MoveCenter } from \"./MoveCenter\";\r\nimport { MoveGravity } from \"./MoveGravity\";\r\nimport { MovePath } from \"./Path/MovePath\";\r\nimport { MoveTrail } from \"./MoveTrail\";\r\nimport { OutModes } from \"./OutModes\";\r\nimport { Spin } from \"./Spin\";\r\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\r\nexport class Move {\r\n    constructor() {\r\n        this.angle = new MoveAngle();\r\n        this.attract = new MoveAttract();\r\n        this.center = new MoveCenter();\r\n        this.decay = 0;\r\n        this.distance = {};\r\n        this.direction = \"none\";\r\n        this.drift = 0;\r\n        this.enable = false;\r\n        this.gravity = new MoveGravity();\r\n        this.path = new MovePath();\r\n        this.outModes = new OutModes();\r\n        this.random = false;\r\n        this.size = false;\r\n        this.speed = 2;\r\n        this.spin = new Spin();\r\n        this.straight = false;\r\n        this.trail = new MoveTrail();\r\n        this.vibrate = false;\r\n        this.warp = false;\r\n    }\r\n    get bounce() {\r\n        return this.collisions;\r\n    }\r\n    set bounce(value) {\r\n        this.collisions = value;\r\n    }\r\n    get collisions() {\r\n        return false;\r\n    }\r\n    set collisions(_) {\r\n    }\r\n    get noise() {\r\n        return this.path;\r\n    }\r\n    set noise(value) {\r\n        this.path = value;\r\n    }\r\n    get outMode() {\r\n        return this.outModes.default;\r\n    }\r\n    set outMode(value) {\r\n        this.outModes.default = value;\r\n    }\r\n    get out_mode() {\r\n        return this.outMode;\r\n    }\r\n    set out_mode(value) {\r\n        this.outMode = value;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.angle.load(typeof data.angle === \"number\" ? { value: data.angle } : data.angle);\r\n        this.attract.load(data.attract);\r\n        this.center.load(data.center);\r\n        if (data.decay !== undefined) {\r\n            this.decay = setRangeValue(data.decay);\r\n        }\r\n        if (data.direction !== undefined) {\r\n            this.direction = data.direction;\r\n        }\r\n        if (data.distance !== undefined) {\r\n            this.distance =\r\n                typeof data.distance === \"number\"\r\n                    ? {\r\n                        horizontal: data.distance,\r\n                        vertical: data.distance,\r\n                    }\r\n                    : { ...data.distance };\r\n        }\r\n        if (data.drift !== undefined) {\r\n            this.drift = setRangeValue(data.drift);\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        this.gravity.load(data.gravity);\r\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\r\n        if (outModes !== undefined) {\r\n            if (typeof outModes === \"object\") {\r\n                this.outModes.load(outModes);\r\n            }\r\n            else {\r\n                this.outModes.load({\r\n                    default: outModes,\r\n                });\r\n            }\r\n        }\r\n        this.path.load(data.path ?? data.noise);\r\n        if (data.random !== undefined) {\r\n            this.random = data.random;\r\n        }\r\n        if (data.size !== undefined) {\r\n            this.size = data.size;\r\n        }\r\n        if (data.speed !== undefined) {\r\n            this.speed = setRangeValue(data.speed);\r\n        }\r\n        this.spin.load(data.spin);\r\n        if (data.straight !== undefined) {\r\n            this.straight = data.straight;\r\n        }\r\n        this.trail.load(data.trail);\r\n        if (data.vibrate !== undefined) {\r\n            this.vibrate = data.vibrate;\r\n        }\r\n        if (data.warp !== undefined) {\r\n            this.warp = data.warp;\r\n        }\r\n    }\r\n}\r\n", "import { RangedAnimationOptions } from \"../../AnimationOptions\";\r\nexport class OpacityAnimation extends RangedAnimationOptions {\r\n    constructor() {\r\n        super();\r\n        this.destroy = \"none\";\r\n        this.speed = 2;\r\n    }\r\n    get opacity_min() {\r\n        return this.minimumValue;\r\n    }\r\n    set opacity_min(value) {\r\n        this.minimumValue = value;\r\n    }\r\n    load(data) {\r\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\r\n            data.minimumValue = data.opacity_min;\r\n        }\r\n        super.load(data);\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.destroy !== undefined) {\r\n            this.destroy = data.destroy;\r\n        }\r\n    }\r\n}\r\n", "import { OpacityAnimation } from \"./OpacityAnimation\";\r\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\r\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\r\nexport class Opacity extends ValueWithRandom {\r\n    constructor() {\r\n        super();\r\n        this.animation = new OpacityAnimation();\r\n        this.random.minimumValue = 0.1;\r\n        this.value = 1;\r\n    }\r\n    get anim() {\r\n        return this.animation;\r\n    }\r\n    set anim(value) {\r\n        this.animation = value;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        super.load(data);\r\n        const animation = data.animation ?? data.anim;\r\n        if (animation !== undefined) {\r\n            this.animation.load(animation);\r\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\r\n        }\r\n    }\r\n}\r\n", "export class ParticlesDensity {\r\n    constructor() {\r\n        this.enable = false;\r\n        this.width = 1920;\r\n        this.height = 1080;\r\n    }\r\n    get area() {\r\n        return this.width;\r\n    }\r\n    set area(value) {\r\n        this.width = value;\r\n    }\r\n    get factor() {\r\n        return this.height;\r\n    }\r\n    set factor(value) {\r\n        this.height = value;\r\n    }\r\n    get value_area() {\r\n        return this.area;\r\n    }\r\n    set value_area(value) {\r\n        this.area = value;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        const width = data.width ?? data.area ?? data.value_area;\r\n        if (width !== undefined) {\r\n            this.width = width;\r\n        }\r\n        const height = data.height ?? data.factor;\r\n        if (height !== undefined) {\r\n            this.height = height;\r\n        }\r\n    }\r\n}\r\n", "import { ParticlesDensity } from \"./ParticlesDensity\";\r\nexport class ParticlesNumber {\r\n    constructor() {\r\n        this.density = new ParticlesDensity();\r\n        this.limit = 0;\r\n        this.value = 0;\r\n    }\r\n    get max() {\r\n        return this.limit;\r\n    }\r\n    set max(value) {\r\n        this.limit = value;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.density.load(data.density);\r\n        const limit = data.limit ?? data.max;\r\n        if (limit !== undefined) {\r\n            this.limit = limit;\r\n        }\r\n        if (data.value !== undefined) {\r\n            this.value = data.value;\r\n        }\r\n    }\r\n}\r\n", "import { OptionsColor } from \"../OptionsColor\";\r\nexport class Shadow {\r\n    constructor() {\r\n        this.blur = 0;\r\n        this.color = new OptionsColor();\r\n        this.enable = false;\r\n        this.offset = {\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.color.value = \"#000\";\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.blur !== undefined) {\r\n            this.blur = data.blur;\r\n        }\r\n        this.color = OptionsColor.create(this.color, data.color);\r\n        if (data.enable !== undefined) {\r\n            this.enable = data.enable;\r\n        }\r\n        if (data.offset === undefined) {\r\n            return;\r\n        }\r\n        if (data.offset.x !== undefined) {\r\n            this.offset.x = data.offset.x;\r\n        }\r\n        if (data.offset.y !== undefined) {\r\n            this.offset.y = data.offset.y;\r\n        }\r\n    }\r\n}\r\n", "import { deepExtend } from \"../../../../Utils/Utils\";\r\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\r\nexport class Shape {\r\n    constructor() {\r\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\r\n            if (!item) {\r\n                return;\r\n            }\r\n            const isArray = item instanceof Array, emptyValue = isArray ? [] : {}, mainDifferentValues = isArray !== this.options[mainKey] instanceof Array, altDifferentValues = isArray !== this.options[altKey] instanceof Array;\r\n            if (mainDifferentValues) {\r\n                this.options[mainKey] = emptyValue;\r\n            }\r\n            if (altDifferentValues && altOverride) {\r\n                this.options[altKey] = emptyValue;\r\n            }\r\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\r\n            if (!this.options[altKey] || altOverride) {\r\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\r\n            }\r\n        };\r\n        this.close = true;\r\n        this.fill = true;\r\n        this.options = {};\r\n        this.type = \"circle\";\r\n    }\r\n    get character() {\r\n        return (this.options[charKey] ?? this.options[charAltKey]);\r\n    }\r\n    set character(value) {\r\n        this.options[charAltKey] = this.options[charKey] = value;\r\n    }\r\n    get custom() {\r\n        return this.options;\r\n    }\r\n    set custom(value) {\r\n        this.options = value;\r\n    }\r\n    get image() {\r\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\r\n    }\r\n    set image(value) {\r\n        this.options[imageAltKey] = this.options[imageKey] = value;\r\n    }\r\n    get images() {\r\n        return this.image;\r\n    }\r\n    set images(value) {\r\n        this.image = value;\r\n    }\r\n    get polygon() {\r\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\r\n    }\r\n    set polygon(value) {\r\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\r\n    }\r\n    get stroke() {\r\n        return [];\r\n    }\r\n    set stroke(_value) {\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        const options = data.options ?? data.custom;\r\n        if (options !== undefined) {\r\n            for (const shape in options) {\r\n                const item = options[shape];\r\n                if (item) {\r\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\r\n                }\r\n            }\r\n        }\r\n        this.loadShape(data.character, charKey, charAltKey, true);\r\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\r\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\r\n        if (data.close !== undefined) {\r\n            this.close = data.close;\r\n        }\r\n        if (data.fill !== undefined) {\r\n            this.fill = data.fill;\r\n        }\r\n        if (data.type !== undefined) {\r\n            this.type = data.type;\r\n        }\r\n    }\r\n}\r\n", "import { RangedAnimationOptions } from \"../../AnimationOptions\";\r\nexport class SizeAnimation extends RangedAnimationOptions {\r\n    constructor() {\r\n        super();\r\n        this.destroy = \"none\";\r\n        this.speed = 5;\r\n    }\r\n    get size_min() {\r\n        return this.minimumValue;\r\n    }\r\n    set size_min(value) {\r\n        this.minimumValue = value;\r\n    }\r\n    load(data) {\r\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\r\n            data.minimumValue = data.size_min;\r\n        }\r\n        super.load(data);\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.destroy !== undefined) {\r\n            this.destroy = data.destroy;\r\n        }\r\n    }\r\n}\r\n", "import { SizeAnimation } from \"./SizeAnimation\";\r\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\r\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\r\nexport class Size extends ValueWithRandom {\r\n    constructor() {\r\n        super();\r\n        this.animation = new SizeAnimation();\r\n        this.random.minimumValue = 1;\r\n        this.value = 3;\r\n    }\r\n    get anim() {\r\n        return this.animation;\r\n    }\r\n    set anim(value) {\r\n        this.animation = value;\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (!data) {\r\n            return;\r\n        }\r\n        const animation = data.animation ?? data.anim;\r\n        if (animation !== undefined) {\r\n            this.animation.load(animation);\r\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\r\n        }\r\n    }\r\n}\r\n", "import { AnimatableColor } from \"../AnimatableColor\";\r\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\r\nexport class Stroke {\r\n    constructor() {\r\n        this.width = 0;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.color !== undefined) {\r\n            this.color = AnimatableColor.create(this.color, data.color);\r\n        }\r\n        if (data.width !== undefined) {\r\n            this.width = setRangeValue(data.width);\r\n        }\r\n        if (data.opacity !== undefined) {\r\n            this.opacity = setRangeValue(data.opacity);\r\n        }\r\n    }\r\n}\r\n", "import { ValueWithRandom } from \"../../ValueWithRandom\";\r\nexport class ZIndex extends ValueWithRandom {\r\n    constructor() {\r\n        super();\r\n        this.opacityRate = 1;\r\n        this.sizeRate = 1;\r\n        this.velocityRate = 1;\r\n    }\r\n    load(data) {\r\n        super.load(data);\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.opacityRate !== undefined) {\r\n            this.opacityRate = data.opacityRate;\r\n        }\r\n        if (data.sizeRate !== undefined) {\r\n            this.sizeRate = data.sizeRate;\r\n        }\r\n        if (data.velocityRate !== undefined) {\r\n            this.velocityRate = data.velocityRate;\r\n        }\r\n    }\r\n}\r\n", "import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\r\nimport { AnimatableColor } from \"../AnimatableColor\";\r\nimport { Collisions } from \"./Collisions/Collisions\";\r\nimport { Move } from \"./Move/Move\";\r\nimport { Opacity } from \"./Opacity/Opacity\";\r\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\r\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\r\nimport { Shadow } from \"./Shadow\";\r\nimport { Shape } from \"./Shape/Shape\";\r\nimport { Size } from \"./Size/Size\";\r\nimport { Stroke } from \"./Stroke\";\r\nimport { ZIndex } from \"./ZIndex/ZIndex\";\r\nexport class ParticlesOptions {\r\n    constructor(engine, container) {\r\n        this._engine = engine;\r\n        this._container = container;\r\n        this.bounce = new ParticlesBounce();\r\n        this.collisions = new Collisions();\r\n        this.color = new AnimatableColor();\r\n        this.color.value = \"#fff\";\r\n        this.groups = {};\r\n        this.move = new Move();\r\n        this.number = new ParticlesNumber();\r\n        this.opacity = new Opacity();\r\n        this.reduceDuplicates = false;\r\n        this.shadow = new Shadow();\r\n        this.shape = new Shape();\r\n        this.size = new Size();\r\n        this.stroke = new Stroke();\r\n        this.zIndex = new ZIndex();\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.bounce.load(data.bounce);\r\n        this.color.load(AnimatableColor.create(this.color, data.color));\r\n        if (data.groups !== undefined) {\r\n            for (const group in data.groups) {\r\n                const item = data.groups[group];\r\n                if (item !== undefined) {\r\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\r\n                }\r\n            }\r\n        }\r\n        this.move.load(data.move);\r\n        this.number.load(data.number);\r\n        this.opacity.load(data.opacity);\r\n        if (data.reduceDuplicates !== undefined) {\r\n            this.reduceDuplicates = data.reduceDuplicates;\r\n        }\r\n        this.shape.load(data.shape);\r\n        this.size.load(data.size);\r\n        this.shadow.load(data.shadow);\r\n        this.zIndex.load(data.zIndex);\r\n        const collisions = data.move?.collisions ?? data.move?.bounce;\r\n        if (collisions !== undefined) {\r\n            this.collisions.enable = collisions;\r\n        }\r\n        this.collisions.load(data.collisions);\r\n        if (data.interactivity !== undefined) {\r\n            this.interactivity = deepExtend({}, data.interactivity);\r\n        }\r\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\r\n        if (strokeToLoad) {\r\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\r\n                const tmp = new Stroke();\r\n                tmp.load(t);\r\n                return tmp;\r\n            });\r\n        }\r\n        if (this._container) {\r\n            const updaters = this._engine.plugins.updaters.get(this._container);\r\n            if (updaters) {\r\n                for (const updater of updaters) {\r\n                    if (updater.loadOptions) {\r\n                        updater.loadOptions(this, data);\r\n                    }\r\n                }\r\n            }\r\n            const interactors = this._engine.plugins.interactors.get(this._container);\r\n            if (interactors) {\r\n                for (const interactor of interactors) {\r\n                    if (interactor.loadParticlesOptions) {\r\n                        interactor.loadParticlesOptions(this, data);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n", "import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\r\nexport function loadOptions(options, ...sourceOptionsArr) {\r\n    for (const sourceOptions of sourceOptionsArr) {\r\n        options.load(sourceOptions);\r\n    }\r\n}\r\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\r\n    const options = new ParticlesOptions(engine, container);\r\n    loadOptions(options, ...sourceOptionsArr);\r\n    return options;\r\n}\r\n", "import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\r\nimport { Background } from \"./Background/Background\";\r\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\r\nimport { FullScreen } from \"./FullScreen/FullScreen\";\r\nimport { Interactivity } from \"./Interactivity/Interactivity\";\r\nimport { ManualParticle } from \"./ManualParticle\";\r\nimport { Responsive } from \"./Responsive\";\r\nimport { Theme } from \"./Theme/Theme\";\r\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\r\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\r\nexport class Options {\r\n    constructor(engine, container) {\r\n        this._findDefaultTheme = (mode) => {\r\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\r\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\r\n        };\r\n        this._importPreset = (preset) => {\r\n            this.load(this._engine.plugins.getPreset(preset));\r\n        };\r\n        this._engine = engine;\r\n        this._container = container;\r\n        this.autoPlay = true;\r\n        this.background = new Background();\r\n        this.backgroundMask = new BackgroundMask();\r\n        this.defaultThemes = {};\r\n        this.delay = 0;\r\n        this.fullScreen = new FullScreen();\r\n        this.detectRetina = true;\r\n        this.duration = 0;\r\n        this.fpsLimit = 120;\r\n        this.interactivity = new Interactivity(engine, container);\r\n        this.manualParticles = [];\r\n        this.particles = loadParticlesOptions(this._engine, this._container);\r\n        this.pauseOnBlur = true;\r\n        this.pauseOnOutsideViewport = true;\r\n        this.responsive = [];\r\n        this.smooth = false;\r\n        this.style = {};\r\n        this.themes = [];\r\n        this.zLayers = 100;\r\n    }\r\n    get backgroundMode() {\r\n        return this.fullScreen;\r\n    }\r\n    set backgroundMode(value) {\r\n        this.fullScreen.load(value);\r\n    }\r\n    get fps_limit() {\r\n        return this.fpsLimit;\r\n    }\r\n    set fps_limit(value) {\r\n        this.fpsLimit = value;\r\n    }\r\n    get retina_detect() {\r\n        return this.detectRetina;\r\n    }\r\n    set retina_detect(value) {\r\n        this.detectRetina = value;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.preset !== undefined) {\r\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\r\n        }\r\n        if (data.autoPlay !== undefined) {\r\n            this.autoPlay = data.autoPlay;\r\n        }\r\n        if (data.delay !== undefined) {\r\n            this.delay = setRangeValue(data.delay);\r\n        }\r\n        const detectRetina = data.detectRetina ?? data.retina_detect;\r\n        if (detectRetina !== undefined) {\r\n            this.detectRetina = detectRetina;\r\n        }\r\n        if (data.duration !== undefined) {\r\n            this.duration = setRangeValue(data.duration);\r\n        }\r\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\r\n        if (fpsLimit !== undefined) {\r\n            this.fpsLimit = fpsLimit;\r\n        }\r\n        if (data.pauseOnBlur !== undefined) {\r\n            this.pauseOnBlur = data.pauseOnBlur;\r\n        }\r\n        if (data.pauseOnOutsideViewport !== undefined) {\r\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\r\n        }\r\n        if (data.zLayers !== undefined) {\r\n            this.zLayers = data.zLayers;\r\n        }\r\n        this.background.load(data.background);\r\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\r\n        if (typeof fullScreen === \"boolean\") {\r\n            this.fullScreen.enable = fullScreen;\r\n        }\r\n        else {\r\n            this.fullScreen.load(fullScreen);\r\n        }\r\n        this.backgroundMask.load(data.backgroundMask);\r\n        this.interactivity.load(data.interactivity);\r\n        if (data.manualParticles) {\r\n            this.manualParticles = data.manualParticles.map((t) => {\r\n                const tmp = new ManualParticle();\r\n                tmp.load(t);\r\n                return tmp;\r\n            });\r\n        }\r\n        this.particles.load(data.particles);\r\n        this.style = deepExtend(this.style, data.style);\r\n        this._engine.plugins.loadOptions(this, data);\r\n        if (data.smooth !== undefined) {\r\n            this.smooth = data.smooth;\r\n        }\r\n        const interactors = this._engine.plugins.interactors.get(this._container);\r\n        if (interactors) {\r\n            for (const interactor of interactors) {\r\n                if (interactor.loadOptions) {\r\n                    interactor.loadOptions(this, data);\r\n                }\r\n            }\r\n        }\r\n        if (data.responsive !== undefined) {\r\n            for (const responsive of data.responsive) {\r\n                const optResponsive = new Responsive();\r\n                optResponsive.load(responsive);\r\n                this.responsive.push(optResponsive);\r\n            }\r\n        }\r\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\r\n        if (data.themes !== undefined) {\r\n            for (const theme of data.themes) {\r\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\r\n                if (!existingTheme) {\r\n                    const optTheme = new Theme();\r\n                    optTheme.load(theme);\r\n                    this.themes.push(optTheme);\r\n                }\r\n                else {\r\n                    existingTheme.load(theme);\r\n                }\r\n            }\r\n        }\r\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\r\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\r\n    }\r\n    setResponsive(width, pxRatio, defaultOptions) {\r\n        this.load(defaultOptions);\r\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\r\n        this.load(responsiveOptions?.options);\r\n        return responsiveOptions?.maxWidth;\r\n    }\r\n    setTheme(name) {\r\n        if (name) {\r\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\r\n            if (chosenTheme) {\r\n                this.load(chosenTheme.options);\r\n            }\r\n        }\r\n        else {\r\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\r\n            if (defaultTheme) {\r\n                this.load(defaultTheme.options);\r\n            }\r\n        }\r\n    }\r\n}\r\n", "export class InteractionManager {\r\n    constructor(engine, container) {\r\n        this.container = container;\r\n        this._engine = engine;\r\n        this._interactors = this._engine.plugins.getInteractors(this.container, true);\r\n        this._externalInteractors = [];\r\n        this._particleInteractors = [];\r\n    }\r\n    async externalInteract(delta) {\r\n        for (const interactor of this._externalInteractors) {\r\n            if (interactor.isEnabled()) {\r\n                await interactor.interact(delta);\r\n            }\r\n        }\r\n    }\r\n    handleClickMode(mode) {\r\n        for (const interactor of this._externalInteractors) {\r\n            if (interactor.handleClickMode) {\r\n                interactor.handleClickMode(mode);\r\n            }\r\n        }\r\n    }\r\n    init() {\r\n        this._externalInteractors = [];\r\n        this._particleInteractors = [];\r\n        for (const interactor of this._interactors) {\r\n            switch (interactor.type) {\r\n                case \"external\":\r\n                    this._externalInteractors.push(interactor);\r\n                    break;\r\n                case \"particles\":\r\n                    this._particleInteractors.push(interactor);\r\n                    break;\r\n            }\r\n            interactor.init();\r\n        }\r\n    }\r\n    async particlesInteract(particle, delta) {\r\n        for (const interactor of this._externalInteractors) {\r\n            interactor.clear(particle, delta);\r\n        }\r\n        for (const interactor of this._particleInteractors) {\r\n            if (interactor.isEnabled(particle)) {\r\n                await interactor.interact(particle, delta);\r\n            }\r\n        }\r\n    }\r\n    async reset(particle) {\r\n        for (const interactor of this._externalInteractors) {\r\n            if (interactor.isEnabled()) {\r\n                interactor.reset(particle);\r\n            }\r\n        }\r\n        for (const interactor of this._particleInteractors) {\r\n            if (interactor.isEnabled(particle)) {\r\n                interactor.reset(particle);\r\n            }\r\n        }\r\n    }\r\n}\r\n", "import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\r\nimport { deepExtend, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\r\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\r\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\r\nimport { Vector } from \"./Utils/Vector\";\r\nimport { Vector3d } from \"./Utils/Vector3d\";\r\nimport { alterHsl } from \"../Utils/CanvasUtils\";\r\nimport { errorPrefix } from \"./Utils/Constants\";\r\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\r\nconst fixOutMode = (data) => {\r\n    if (!isInArray(data.outMode, data.checkModes)) {\r\n        return;\r\n    }\r\n    const diameter = data.radius * 2;\r\n    if (data.coord > data.maxCoord - diameter) {\r\n        data.setCb(-data.radius);\r\n    }\r\n    else if (data.coord < diameter) {\r\n        data.setCb(data.radius);\r\n    }\r\n};\r\nexport class Particle {\r\n    constructor(engine, id, container, position, overrideOptions, group) {\r\n        this.container = container;\r\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\r\n            for (const [, plugin] of container.plugins) {\r\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\r\n                if (pluginPos) {\r\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\r\n                }\r\n            }\r\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\r\n                size: canvasSize,\r\n                position: position,\r\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\r\n                fixOutMode({\r\n                    outMode,\r\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\r\n                    coord: pos.x,\r\n                    maxCoord: container.canvas.size.width,\r\n                    setCb: (value) => (pos.x += value),\r\n                    radius,\r\n                });\r\n            }, fixVertical = (outMode) => {\r\n                fixOutMode({\r\n                    outMode,\r\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\r\n                    coord: pos.y,\r\n                    maxCoord: container.canvas.size.height,\r\n                    setCb: (value) => (pos.y += value),\r\n                    radius,\r\n                });\r\n            };\r\n            fixHorizontal(outModes.left ?? outModes.default);\r\n            fixHorizontal(outModes.right ?? outModes.default);\r\n            fixVertical(outModes.top ?? outModes.default);\r\n            fixVertical(outModes.bottom ?? outModes.default);\r\n            if (this._checkOverlap(pos, tryCount)) {\r\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\r\n            }\r\n            return pos;\r\n        };\r\n        this._calculateVelocity = () => {\r\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\r\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\r\n                return res;\r\n            }\r\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\r\n                left: radOffset - rad / 2,\r\n                right: radOffset + rad / 2,\r\n            };\r\n            if (!moveOptions.straight) {\r\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\r\n            }\r\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\r\n                res.length *= getRandom();\r\n            }\r\n            return res;\r\n        };\r\n        this._checkOverlap = (pos, tryCount = 0) => {\r\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\r\n            if (!collisionsOptions.enable) {\r\n                return false;\r\n            }\r\n            const overlapOptions = collisionsOptions.overlap;\r\n            if (overlapOptions.enable) {\r\n                return false;\r\n            }\r\n            const retries = overlapOptions.retries;\r\n            if (retries >= 0 && tryCount > retries) {\r\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\r\n            }\r\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\r\n        };\r\n        this._getRollColor = (color) => {\r\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\r\n                return color;\r\n            }\r\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\r\n            if (!rolled) {\r\n                return color;\r\n            }\r\n            if (this.backColor) {\r\n                return this.backColor;\r\n            }\r\n            if (this.roll.alter) {\r\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\r\n            }\r\n            return color;\r\n        };\r\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\r\n            const shapeData = shapeOptions.options[this.shape];\r\n            if (shapeData) {\r\n                return deepExtend({\r\n                    close: shapeOptions.close,\r\n                    fill: shapeOptions.fill,\r\n                }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\r\n            }\r\n        };\r\n        this._engine = engine;\r\n        this.init(id, position, overrideOptions, group);\r\n    }\r\n    destroy(override) {\r\n        if (this.unbreakable || this.destroyed) {\r\n            return;\r\n        }\r\n        this.destroyed = true;\r\n        this.bubble.inRange = false;\r\n        this.slow.inRange = false;\r\n        const container = this.container, pathGenerator = this.pathGenerator;\r\n        for (const [, plugin] of container.plugins) {\r\n            if (plugin.particleDestroyed) {\r\n                plugin.particleDestroyed(this, override);\r\n            }\r\n        }\r\n        for (const updater of container.particles.updaters) {\r\n            if (updater.particleDestroyed) {\r\n                updater.particleDestroyed(this, override);\r\n            }\r\n        }\r\n        if (pathGenerator) {\r\n            pathGenerator.reset(this);\r\n        }\r\n    }\r\n    draw(delta) {\r\n        const container = this.container;\r\n        for (const [, plugin] of container.plugins) {\r\n            container.canvas.drawParticlePlugin(plugin, this, delta);\r\n        }\r\n        container.canvas.drawParticle(this, delta);\r\n    }\r\n    getFillColor() {\r\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\r\n    }\r\n    getMass() {\r\n        return (this.getRadius() ** 2 * Math.PI) / 2;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            x: this.position.x + this.offset.x,\r\n            y: this.position.y + this.offset.y,\r\n            z: this.position.z,\r\n        };\r\n    }\r\n    getRadius() {\r\n        return this.bubble.radius ?? this.size.value;\r\n    }\r\n    getStrokeColor() {\r\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\r\n    }\r\n    init(id, position, overrideOptions, group) {\r\n        const container = this.container, engine = this._engine;\r\n        this.id = id;\r\n        this.group = group;\r\n        this.fill = true;\r\n        this.pathRotation = false;\r\n        this.close = true;\r\n        this.lastPathTime = 0;\r\n        this.destroyed = false;\r\n        this.unbreakable = false;\r\n        this.rotation = 0;\r\n        this.misplaced = false;\r\n        this.retina = {\r\n            maxDistance: {},\r\n        };\r\n        this.outType = \"normal\";\r\n        this.ignoresResizeRatio = true;\r\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\r\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\r\n        const shapeOptions = particlesOptions.shape;\r\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\r\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\r\n            if (shape) {\r\n                this.shape = shape;\r\n                shapeOptions.load(overrideOptions.shape);\r\n            }\r\n        }\r\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\r\n        particlesOptions.load(overrideOptions);\r\n        const shapeData = this.shapeData;\r\n        if (shapeData) {\r\n            particlesOptions.load(shapeData.particles);\r\n        }\r\n        const interactivity = new Interactivity(engine, container);\r\n        interactivity.load(container.actualOptions.interactivity);\r\n        interactivity.load(particlesOptions.interactivity);\r\n        this.interactivity = interactivity;\r\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\r\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\r\n        this.options = particlesOptions;\r\n        const pathOptions = this.options.move.path;\r\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\r\n        if (pathOptions.generator) {\r\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\r\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\r\n                this.pathGenerator.init(container);\r\n            }\r\n        }\r\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\r\n        container.retina.initParticle(this);\r\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\r\n        this.bubble = {\r\n            inRange: false,\r\n        };\r\n        this.slow = {\r\n            inRange: false,\r\n            factor: 1,\r\n        };\r\n        this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\r\n        this.initialPosition = this.position.copy();\r\n        const canvasSize = container.canvas.size, moveCenter = { ...this.options.move.center }, isCenterPercent = moveCenter.mode === \"percent\";\r\n        this.moveCenter = {\r\n            x: moveCenter.x * (isCenterPercent ? canvasSize.width / 100 : 1),\r\n            y: moveCenter.y * (isCenterPercent ? canvasSize.height / 100 : 1),\r\n            radius: this.options.move.center.radius ?? 0,\r\n            mode: this.options.move.center.mode ?? \"percent\",\r\n        };\r\n        this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\r\n        switch (this.options.move.direction) {\r\n            case \"inside\":\r\n                this.outType = \"inside\";\r\n                break;\r\n            case \"outside\":\r\n                this.outType = \"outside\";\r\n                break;\r\n        }\r\n        this.initialVelocity = this._calculateVelocity();\r\n        this.velocity = this.initialVelocity.copy();\r\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\r\n        this.offset = Vector.origin;\r\n        const particles = container.particles;\r\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\r\n        particles.lastZIndex = this.position.z;\r\n        this.zIndexFactor = this.position.z / container.zLayers;\r\n        this.sides = 24;\r\n        let drawer = container.drawers.get(this.shape);\r\n        if (!drawer) {\r\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\r\n            if (drawer) {\r\n                container.drawers.set(this.shape, drawer);\r\n            }\r\n        }\r\n        if (drawer && drawer.loadShape) {\r\n            drawer.loadShape(this);\r\n        }\r\n        const sideCountFunc = drawer?.getSidesCount;\r\n        if (sideCountFunc) {\r\n            this.sides = sideCountFunc(this);\r\n        }\r\n        this.spawning = false;\r\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\r\n        for (const updater of container.particles.updaters) {\r\n            updater.init(this);\r\n        }\r\n        for (const mover of container.particles.movers) {\r\n            mover.init && mover.init(this);\r\n        }\r\n        if (drawer && drawer.particleInit) {\r\n            drawer.particleInit(container, this);\r\n        }\r\n        for (const [, plugin] of container.plugins) {\r\n            plugin.particleCreated && plugin.particleCreated(this);\r\n        }\r\n    }\r\n    isInsideCanvas() {\r\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\r\n        return (position.x >= -radius &&\r\n            position.y >= -radius &&\r\n            position.y <= canvasSize.height + radius &&\r\n            position.x <= canvasSize.width + radius);\r\n    }\r\n    isVisible() {\r\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\r\n    }\r\n    reset() {\r\n        for (const updater of this.container.particles.updaters) {\r\n            updater.reset && updater.reset(this);\r\n        }\r\n    }\r\n}\r\n", "export class Point {\r\n    constructor(position, particle) {\r\n        this.position = position;\r\n        this.particle = particle;\r\n    }\r\n}\r\n", "export class Range {\r\n    constructor(x, y) {\r\n        this.position = {\r\n            x: x,\r\n            y: y,\r\n        };\r\n    }\r\n}\r\n", "import { Range } from \"./Range\";\r\nimport { getDistance } from \"../../Utils/NumberUtils\";\r\nexport class Circle extends Range {\r\n    constructor(x, y, radius) {\r\n        super(x, y);\r\n        this.radius = radius;\r\n    }\r\n    contains(point) {\r\n        return getDistance(point, this.position) <= this.radius;\r\n    }\r\n    intersects(range) {\r\n        const rect = range, circle = range, pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\r\n        if (circle.radius !== undefined) {\r\n            const rSum = r + circle.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\r\n            return rSum > dist;\r\n        }\r\n        else if (rect.size !== undefined) {\r\n            const w = rect.size.width, h = rect.size.height, edges = Math.pow(distPos.x - w, 2) + Math.pow(distPos.y - h, 2);\r\n            return edges <= r ** 2 || (distPos.x <= r + w && distPos.y <= r + h) || distPos.x <= w || distPos.y <= h;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n", "import { Circle } from \"./Circle\";\r\nimport { Range } from \"./Range\";\r\nexport class Rectangle extends Range {\r\n    constructor(x, y, width, height) {\r\n        super(x, y);\r\n        this.size = {\r\n            height: height,\r\n            width: width,\r\n        };\r\n    }\r\n    contains(point) {\r\n        const w = this.size.width, h = this.size.height, pos = this.position;\r\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\r\n    }\r\n    intersects(range) {\r\n        if (range instanceof Circle) {\r\n            range.intersects(this);\r\n        }\r\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\r\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\r\n    }\r\n}\r\n", "import { Circle } from \"./Circle\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { getDistance } from \"../../Utils/NumberUtils\";\r\nexport class QuadTree {\r\n    constructor(rectangle, capacity) {\r\n        this.rectangle = rectangle;\r\n        this.capacity = capacity;\r\n        this._subdivide = () => {\r\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\r\n            for (let i = 0; i < 4; i++) {\r\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\r\n            }\r\n            this._divided = true;\r\n        };\r\n        this._points = [];\r\n        this._divided = false;\r\n        this._subs = [];\r\n    }\r\n    insert(point) {\r\n        if (!this.rectangle.contains(point.position)) {\r\n            return false;\r\n        }\r\n        if (this._points.length < this.capacity) {\r\n            this._points.push(point);\r\n            return true;\r\n        }\r\n        if (!this._divided) {\r\n            this._subdivide();\r\n        }\r\n        return this._subs.some((sub) => sub.insert(point));\r\n    }\r\n    query(range, check, found) {\r\n        const res = found || [];\r\n        if (!range.intersects(this.rectangle)) {\r\n            return [];\r\n        }\r\n        for (const p of this._points) {\r\n            if (!range.contains(p.position) &&\r\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\r\n                (!check || check(p.particle))) {\r\n                continue;\r\n            }\r\n            res.push(p.particle);\r\n        }\r\n        if (this._divided) {\r\n            for (const sub of this._subs) {\r\n                sub.query(range, check, res);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    queryCircle(position, radius, check) {\r\n        return this.query(new Circle(position.x, position.y, radius), check);\r\n    }\r\n    queryRectangle(position, size, check) {\r\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\r\n    }\r\n}\r\n", "import { InteractionManager } from \"./Utils/InteractionManager\";\r\nimport { Particle } from \"./Particle\";\r\nimport { Point } from \"./Utils/Point\";\r\nimport { QuadTree } from \"./Utils/QuadTree\";\r\nimport { Rectangle } from \"./Utils/Rectangle\";\r\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\r\nimport { errorPrefix } from \"./Utils/Constants\";\r\nconst qTreeCapacity = 4;\r\nconst qTreeRectangle = (canvasSize) => {\r\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\r\n};\r\nexport class Particles {\r\n    constructor(engine, container) {\r\n        this._applyDensity = (options, manualCount, group) => {\r\n            if (!options.number.density?.enable) {\r\n                return;\r\n            }\r\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this._array.filter((t) => t.group === group).length);\r\n            this.limit = numberOptions.limit * densityFactor;\r\n            if (particlesCount < particlesNumber) {\r\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\r\n            }\r\n            else if (particlesCount > particlesNumber) {\r\n                this.removeQuantity(particlesCount - particlesNumber, group);\r\n            }\r\n        };\r\n        this._initDensityFactor = (densityOptions) => {\r\n            const container = this._container;\r\n            if (!container.canvas.element || !densityOptions.enable) {\r\n                return 1;\r\n            }\r\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\r\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\r\n        };\r\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\r\n            try {\r\n                let particle = this.pool.pop();\r\n                if (particle) {\r\n                    particle.init(this._nextId, position, overrideOptions, group);\r\n                }\r\n                else {\r\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\r\n                }\r\n                let canAdd = true;\r\n                if (initializer) {\r\n                    canAdd = initializer(particle);\r\n                }\r\n                if (!canAdd) {\r\n                    return;\r\n                }\r\n                this._array.push(particle);\r\n                this._zArray.push(particle);\r\n                this._nextId++;\r\n                this._engine.dispatchEvent(\"particleAdded\", {\r\n                    container: this._container,\r\n                    data: {\r\n                        particle,\r\n                    },\r\n                });\r\n                return particle;\r\n            }\r\n            catch (e) {\r\n                console.warn(`${errorPrefix} adding particle: ${e}`);\r\n                return;\r\n            }\r\n        };\r\n        this._engine = engine;\r\n        this._container = container;\r\n        this._nextId = 0;\r\n        this._array = [];\r\n        this._zArray = [];\r\n        this.pool = [];\r\n        this.limit = 0;\r\n        this.needsSort = false;\r\n        this.lastZIndex = 0;\r\n        this._interactionManager = new InteractionManager(this._engine, this._container);\r\n        const canvasSize = this._container.canvas.size;\r\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\r\n        this.movers = this._engine.plugins.getMovers(this._container, true);\r\n        this.updaters = this._engine.plugins.getUpdaters(this._container, true);\r\n    }\r\n    get count() {\r\n        return this._array.length;\r\n    }\r\n    addManualParticles() {\r\n        const container = this._container, options = container.actualOptions;\r\n        for (const particle of options.manualParticles) {\r\n            this.addParticle(particle.position\r\n                ? particle.position.mode === \"precise\"\r\n                    ? particle.position\r\n                    : calcPositionFromSize({\r\n                        size: container.canvas.size,\r\n                        position: particle.position,\r\n                    })\r\n                : undefined, particle.options);\r\n        }\r\n    }\r\n    addParticle(position, overrideOptions, group, initializer) {\r\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\r\n        if (limit > 0) {\r\n            const countToRemove = this.count + 1 - limit;\r\n            if (countToRemove > 0) {\r\n                this.removeQuantity(countToRemove);\r\n            }\r\n        }\r\n        return this._pushParticle(position, overrideOptions, group, initializer);\r\n    }\r\n    clear() {\r\n        this._array = [];\r\n        this._zArray = [];\r\n    }\r\n    destroy() {\r\n        this._array = [];\r\n        this._zArray = [];\r\n        this.movers = [];\r\n        this.updaters = [];\r\n    }\r\n    async draw(delta) {\r\n        const container = this._container, canvasSize = this._container.canvas.size;\r\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\r\n        container.canvas.clear();\r\n        await this.update(delta);\r\n        if (this.needsSort) {\r\n            this._zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\r\n            this.lastZIndex = this._zArray[this._zArray.length - 1].position.z;\r\n            this.needsSort = false;\r\n        }\r\n        for (const [, plugin] of container.plugins) {\r\n            container.canvas.drawPlugin(plugin, delta);\r\n        }\r\n        for (const p of this._zArray) {\r\n            p.draw(delta);\r\n        }\r\n    }\r\n    filter(condition) {\r\n        return this._array.filter(condition);\r\n    }\r\n    find(condition) {\r\n        return this._array.find(condition);\r\n    }\r\n    handleClickMode(mode) {\r\n        this._interactionManager.handleClickMode(mode);\r\n    }\r\n    init() {\r\n        const container = this._container, options = container.actualOptions;\r\n        this.lastZIndex = 0;\r\n        this.needsSort = false;\r\n        let handled = false;\r\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\r\n        this._interactionManager.init();\r\n        for (const [, plugin] of container.plugins) {\r\n            if (plugin.particlesInitialization !== undefined) {\r\n                handled = plugin.particlesInitialization();\r\n            }\r\n            if (handled) {\r\n                break;\r\n            }\r\n        }\r\n        this._interactionManager.init();\r\n        for (const [, pathGenerator] of container.pathGenerators) {\r\n            pathGenerator.init(container);\r\n        }\r\n        this.addManualParticles();\r\n        if (!handled) {\r\n            for (const group in options.particles.groups) {\r\n                const groupOptions = options.particles.groups[group];\r\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\r\n                    this.addParticle(undefined, groupOptions, group);\r\n                }\r\n            }\r\n            for (let i = this.count; i < options.particles.number.value; i++) {\r\n                this.addParticle();\r\n            }\r\n        }\r\n    }\r\n    push(nb, mouse, overrideOptions, group) {\r\n        this.pushing = true;\r\n        for (let i = 0; i < nb; i++) {\r\n            this.addParticle(mouse?.position, overrideOptions, group);\r\n        }\r\n        this.pushing = false;\r\n    }\r\n    async redraw() {\r\n        this.clear();\r\n        this.init();\r\n        await this.draw({ value: 0, factor: 0 });\r\n    }\r\n    remove(particle, group, override) {\r\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\r\n    }\r\n    removeAt(index, quantity = 1, group, override) {\r\n        if (index < 0 || index > this.count) {\r\n            return;\r\n        }\r\n        let deleted = 0;\r\n        for (let i = index; deleted < quantity && i < this.count; i++) {\r\n            const particle = this._array[i];\r\n            if (!particle || particle.group !== group) {\r\n                continue;\r\n            }\r\n            particle.destroy(override);\r\n            this._array.splice(i--, 1);\r\n            const zIdx = this._zArray.indexOf(particle);\r\n            this._zArray.splice(zIdx, 1);\r\n            this.pool.push(particle);\r\n            deleted++;\r\n            this._engine.dispatchEvent(\"particleRemoved\", {\r\n                container: this._container,\r\n                data: {\r\n                    particle,\r\n                },\r\n            });\r\n        }\r\n    }\r\n    removeQuantity(quantity, group) {\r\n        this.removeAt(0, quantity, group);\r\n    }\r\n    setDensity() {\r\n        const options = this._container.actualOptions, groups = options.particles.groups;\r\n        for (const group in groups) {\r\n            this._applyDensity(groups[group], 0, group);\r\n        }\r\n        this._applyDensity(options.particles, options.manualParticles.length);\r\n    }\r\n    async update(delta) {\r\n        const container = this._container, particlesToDelete = new Set();\r\n        for (const [, pathGenerator] of container.pathGenerators) {\r\n            pathGenerator.update();\r\n        }\r\n        for (const [, plugin] of container.plugins) {\r\n            plugin.update && plugin.update(delta);\r\n        }\r\n        for (const particle of this._array) {\r\n            const resizeFactor = container.canvas.resizeFactor;\r\n            if (resizeFactor && !particle.ignoresResizeRatio) {\r\n                particle.position.x *= resizeFactor.width;\r\n                particle.position.y *= resizeFactor.height;\r\n                particle.initialPosition.x *= resizeFactor.width;\r\n                particle.initialPosition.y *= resizeFactor.height;\r\n            }\r\n            particle.ignoresResizeRatio = false;\r\n            await this._interactionManager.reset(particle);\r\n            for (const [, plugin] of this._container.plugins) {\r\n                if (particle.destroyed) {\r\n                    break;\r\n                }\r\n                if (plugin.particleUpdate) {\r\n                    plugin.particleUpdate(particle, delta);\r\n                }\r\n            }\r\n            for (const mover of this.movers) {\r\n                if (mover.isEnabled(particle)) {\r\n                    mover.move(particle, delta);\r\n                }\r\n            }\r\n            if (particle.destroyed) {\r\n                particlesToDelete.add(particle);\r\n                continue;\r\n            }\r\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\r\n        }\r\n        this._array = this._array.filter((t) => !particlesToDelete.has(t));\r\n        await this._interactionManager.externalInteract(delta);\r\n        for (const particle of this._array) {\r\n            for (const updater of this.updaters) {\r\n                updater.update(particle, delta);\r\n            }\r\n            if (!particle.destroyed && !particle.spawning) {\r\n                await this._interactionManager.particlesInteract(particle, delta);\r\n            }\r\n        }\r\n        delete container.canvas.resizeFactor;\r\n    }\r\n}\r\n", "import { getRangeValue } from \"../Utils/NumberUtils\";\r\nimport { isSsr } from \"../Utils/Utils\";\r\nexport class Retina {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    init() {\r\n        const container = this.container, options = container.actualOptions;\r\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\r\n        this.reduceFactor = 1;\r\n        const ratio = this.pixelRatio;\r\n        if (container.canvas.element) {\r\n            const element = container.canvas.element;\r\n            container.canvas.size.width = element.offsetWidth * ratio;\r\n            container.canvas.size.height = element.offsetHeight * ratio;\r\n        }\r\n        const particles = options.particles;\r\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\r\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\r\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\r\n    }\r\n    initParticle(particle) {\r\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\r\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\r\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\r\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\r\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\r\n        const maxDistance = props.maxDistance;\r\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\r\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\r\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\r\n    }\r\n}\r\n", "import { animate, cancelAnimation } from \"../Utils/Utils\";\r\nimport { Canvas } from \"./Canvas\";\r\nimport { EventListeners } from \"./Utils/EventListeners\";\r\nimport { FrameManager } from \"./Utils/FrameManager\";\r\nimport { Options } from \"../Options/Classes/Options\";\r\nimport { Particles } from \"./Particles\";\r\nimport { Retina } from \"./Retina\";\r\nimport { getRangeValue } from \"../Utils/NumberUtils\";\r\nimport { loadOptions } from \"../Utils/OptionsUtils\";\r\nfunction guardCheck(container) {\r\n    return container && !container.destroyed;\r\n}\r\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\r\n    const options = new Options(engine, container);\r\n    loadOptions(options, ...sourceOptionsArr);\r\n    return options;\r\n}\r\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\r\n    generate: (p) => p.velocity,\r\n    init: () => {\r\n    },\r\n    update: () => {\r\n    },\r\n    reset: () => {\r\n    },\r\n};\r\nexport class Container {\r\n    constructor(engine, id, sourceOptions) {\r\n        this.id = id;\r\n        this._intersectionManager = (entries) => {\r\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\r\n                return;\r\n            }\r\n            for (const entry of entries) {\r\n                if (entry.target !== this.interactivity.element) {\r\n                    continue;\r\n                }\r\n                (entry.isIntersecting ? this.play : this.pause)();\r\n            }\r\n        };\r\n        this._engine = engine;\r\n        this.fpsLimit = 120;\r\n        this.smooth = false;\r\n        this._delay = 0;\r\n        this._duration = 0;\r\n        this._lifeTime = 0;\r\n        this._firstStart = true;\r\n        this.started = false;\r\n        this.destroyed = false;\r\n        this._paused = true;\r\n        this.lastFrameTime = 0;\r\n        this.zLayers = 100;\r\n        this.pageHidden = false;\r\n        this._sourceOptions = sourceOptions;\r\n        this._initialSourceOptions = sourceOptions;\r\n        this.retina = new Retina(this);\r\n        this.canvas = new Canvas(this);\r\n        this.particles = new Particles(this._engine, this);\r\n        this.frameManager = new FrameManager(this);\r\n        this.pathGenerators = new Map();\r\n        this.interactivity = {\r\n            mouse: {\r\n                clicking: false,\r\n                inside: false,\r\n            },\r\n        };\r\n        this.plugins = new Map();\r\n        this.drawers = new Map();\r\n        this._options = loadContainerOptions(this._engine, this);\r\n        this.actualOptions = loadContainerOptions(this._engine, this);\r\n        this._eventListeners = new EventListeners(this);\r\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\r\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\r\n        }\r\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\r\n    }\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    get sourceOptions() {\r\n        return this._sourceOptions;\r\n    }\r\n    addClickHandler(callback) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        const el = this.interactivity.element;\r\n        if (!el) {\r\n            return;\r\n        }\r\n        const clickOrTouchHandler = (e, pos, radius) => {\r\n            if (!guardCheck(this)) {\r\n                return;\r\n            }\r\n            const pxRatio = this.retina.pixelRatio, posRetina = {\r\n                x: pos.x * pxRatio,\r\n                y: pos.y * pxRatio,\r\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\r\n            callback(e, particles);\r\n        };\r\n        const clickHandler = (e) => {\r\n            if (!guardCheck(this)) {\r\n                return;\r\n            }\r\n            const mouseEvent = e, pos = {\r\n                x: mouseEvent.offsetX || mouseEvent.clientX,\r\n                y: mouseEvent.offsetY || mouseEvent.clientY,\r\n            };\r\n            clickOrTouchHandler(e, pos, 1);\r\n        };\r\n        const touchStartHandler = () => {\r\n            if (!guardCheck(this)) {\r\n                return;\r\n            }\r\n            touched = true;\r\n            touchMoved = false;\r\n        };\r\n        const touchMoveHandler = () => {\r\n            if (!guardCheck(this)) {\r\n                return;\r\n            }\r\n            touchMoved = true;\r\n        };\r\n        const touchEndHandler = (e) => {\r\n            if (!guardCheck(this)) {\r\n                return;\r\n            }\r\n            if (touched && !touchMoved) {\r\n                const touchEvent = e;\r\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\r\n                if (!lastTouch) {\r\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\r\n                    if (!lastTouch) {\r\n                        return;\r\n                    }\r\n                }\r\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\r\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\r\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\r\n                };\r\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\r\n            }\r\n            touched = false;\r\n            touchMoved = false;\r\n        };\r\n        const touchCancelHandler = () => {\r\n            if (!guardCheck(this)) {\r\n                return;\r\n            }\r\n            touched = false;\r\n            touchMoved = false;\r\n        };\r\n        let touched = false, touchMoved = false;\r\n        el.addEventListener(\"click\", clickHandler);\r\n        el.addEventListener(\"touchstart\", touchStartHandler);\r\n        el.addEventListener(\"touchmove\", touchMoveHandler);\r\n        el.addEventListener(\"touchend\", touchEndHandler);\r\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\r\n    }\r\n    addLifeTime(value) {\r\n        this._lifeTime += value;\r\n    }\r\n    addPath(key, generator, override = false) {\r\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\r\n            return false;\r\n        }\r\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\r\n        return true;\r\n    }\r\n    alive() {\r\n        return !this._duration || this._lifeTime <= this._duration;\r\n    }\r\n    destroy() {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        this.stop();\r\n        this.particles.destroy();\r\n        this.canvas.destroy();\r\n        for (const [, drawer] of this.drawers) {\r\n            drawer.destroy && drawer.destroy(this);\r\n        }\r\n        for (const key of this.drawers.keys()) {\r\n            this.drawers.delete(key);\r\n        }\r\n        this._engine.plugins.destroy(this);\r\n        this.destroyed = true;\r\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\r\n        if (idx >= 0) {\r\n            mainArr.splice(idx, 1);\r\n        }\r\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\r\n    }\r\n    draw(force) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        let refreshTime = force;\r\n        this._drawAnimationFrame = animate()(async (timestamp) => {\r\n            if (refreshTime) {\r\n                this.lastFrameTime = undefined;\r\n                refreshTime = false;\r\n            }\r\n            await this.frameManager.nextFrame(timestamp);\r\n        });\r\n    }\r\n    exportConfiguration() {\r\n        return JSON.stringify(this.actualOptions, (key, value) => {\r\n            if (key.startsWith(\"_\")) {\r\n                return;\r\n            }\r\n            return value;\r\n        }, 2);\r\n    }\r\n    exportImage(callback, type, quality) {\r\n        const element = this.canvas.element;\r\n        if (element) {\r\n            element.toBlob(callback, type ?? \"image/png\", quality);\r\n        }\r\n    }\r\n    exportImg(callback) {\r\n        this.exportImage(callback);\r\n    }\r\n    getAnimationStatus() {\r\n        return !this._paused && !this.pageHidden && guardCheck(this);\r\n    }\r\n    handleClickMode(mode) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        this.particles.handleClickMode(mode);\r\n        for (const [, plugin] of this.plugins) {\r\n            plugin.handleClickMode && plugin.handleClickMode(mode);\r\n        }\r\n    }\r\n    async init() {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        const shapes = this._engine.plugins.getSupportedShapes();\r\n        for (const type of shapes) {\r\n            const drawer = this._engine.plugins.getShapeDrawer(type);\r\n            if (drawer) {\r\n                this.drawers.set(type, drawer);\r\n            }\r\n        }\r\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\r\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\r\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\r\n        for (const [id, plugin] of availablePlugins) {\r\n            this.plugins.set(id, plugin);\r\n        }\r\n        this.retina.init();\r\n        await this.canvas.init();\r\n        this.updateActualOptions();\r\n        this.canvas.initBackground();\r\n        this.canvas.resize();\r\n        this.zLayers = this.actualOptions.zLayers;\r\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\r\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\r\n        this._lifeTime = 0;\r\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\r\n        this.smooth = this.actualOptions.smooth;\r\n        for (const [, drawer] of this.drawers) {\r\n            drawer.init && (await drawer.init(this));\r\n        }\r\n        for (const [, plugin] of this.plugins) {\r\n            plugin.init && (await plugin.init());\r\n        }\r\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\r\n        this.particles.init();\r\n        this.particles.setDensity();\r\n        for (const [, plugin] of this.plugins) {\r\n            plugin.particlesSetup && plugin.particlesSetup();\r\n        }\r\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\r\n    }\r\n    async loadTheme(name) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        this._currentTheme = name;\r\n        await this.refresh();\r\n    }\r\n    pause() {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        if (this._drawAnimationFrame !== undefined) {\r\n            cancelAnimation()(this._drawAnimationFrame);\r\n            delete this._drawAnimationFrame;\r\n        }\r\n        if (this._paused) {\r\n            return;\r\n        }\r\n        for (const [, plugin] of this.plugins) {\r\n            plugin.pause && plugin.pause();\r\n        }\r\n        if (!this.pageHidden) {\r\n            this._paused = true;\r\n        }\r\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\r\n    }\r\n    play(force) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        const needsUpdate = this._paused || force;\r\n        if (this._firstStart && !this.actualOptions.autoPlay) {\r\n            this._firstStart = false;\r\n            return;\r\n        }\r\n        if (this._paused) {\r\n            this._paused = false;\r\n        }\r\n        if (needsUpdate) {\r\n            for (const [, plugin] of this.plugins) {\r\n                if (plugin.play) {\r\n                    plugin.play();\r\n                }\r\n            }\r\n        }\r\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\r\n        this.draw(needsUpdate || false);\r\n    }\r\n    async refresh() {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        this.stop();\r\n        return this.start();\r\n    }\r\n    async reset() {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        this._initialSourceOptions = undefined;\r\n        this._options = loadContainerOptions(this._engine, this);\r\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\r\n        return this.refresh();\r\n    }\r\n    setNoise(noiseOrGenerator, init, update) {\r\n        if (!guardCheck(this)) {\r\n            return;\r\n        }\r\n        this.setPath(noiseOrGenerator, init, update);\r\n    }\r\n    setPath(pathOrGenerator, init, update) {\r\n        if (!pathOrGenerator || !guardCheck(this)) {\r\n            return;\r\n        }\r\n        const pathGenerator = { ...defaultPathGenerator };\r\n        if (typeof pathOrGenerator === \"function\") {\r\n            pathGenerator.generate = pathOrGenerator;\r\n            if (init) {\r\n                pathGenerator.init = init;\r\n            }\r\n            if (update) {\r\n                pathGenerator.update = update;\r\n            }\r\n        }\r\n        else {\r\n            const oldGenerator = pathGenerator;\r\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\r\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\r\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\r\n        }\r\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\r\n    }\r\n    async start() {\r\n        if (!guardCheck(this) || this.started) {\r\n            return;\r\n        }\r\n        await this.init();\r\n        this.started = true;\r\n        await new Promise((resolve) => {\r\n            this._delayTimeout = setTimeout(async () => {\r\n                this._eventListeners.addListeners();\r\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\r\n                    this._intersectionObserver.observe(this.interactivity.element);\r\n                }\r\n                for (const [, plugin] of this.plugins) {\r\n                    plugin.start && (await plugin.start());\r\n                }\r\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\r\n                this.play();\r\n                resolve();\r\n            }, this._delay);\r\n        });\r\n    }\r\n    stop() {\r\n        if (!guardCheck(this) || !this.started) {\r\n            return;\r\n        }\r\n        if (this._delayTimeout) {\r\n            clearTimeout(this._delayTimeout);\r\n            delete this._delayTimeout;\r\n        }\r\n        this._firstStart = true;\r\n        this.started = false;\r\n        this._eventListeners.removeListeners();\r\n        this.pause();\r\n        this.particles.clear();\r\n        this.canvas.stop();\r\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\r\n            this._intersectionObserver.unobserve(this.interactivity.element);\r\n        }\r\n        for (const [, plugin] of this.plugins) {\r\n            plugin.stop && plugin.stop();\r\n        }\r\n        for (const key of this.plugins.keys()) {\r\n            this.plugins.delete(key);\r\n        }\r\n        this._sourceOptions = this._options;\r\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\r\n    }\r\n    updateActualOptions() {\r\n        this.actualOptions.responsive = [];\r\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\r\n        this.actualOptions.setTheme(this._currentTheme);\r\n        if (this.responsiveMaxWidth === newMaxWidth) {\r\n            return false;\r\n        }\r\n        this.responsiveMaxWidth = newMaxWidth;\r\n        return true;\r\n    }\r\n}\r\n", "import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\r\nimport { Container } from \"./Container\";\r\nimport { getRandom } from \"../Utils/NumberUtils\";\r\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\r\nasync function getDataFromUrl(jsonUrl, index) {\r\n    const url = itemFromSingleOrMultiple(jsonUrl, index);\r\n    if (!url) {\r\n        return;\r\n    }\r\n    const response = await fetch(url);\r\n    if (response.ok) {\r\n        return response.json();\r\n    }\r\n    console.error(`${errorPrefix} ${response.status} while retrieving config file`);\r\n}\r\nexport class Loader {\r\n    constructor(engine) {\r\n        this._engine = engine;\r\n    }\r\n    load(tagId, options, index) {\r\n        const params = { index, remote: false };\r\n        if (typeof tagId === \"string\") {\r\n            params.tagId = tagId;\r\n        }\r\n        else {\r\n            params.options = tagId;\r\n        }\r\n        if (typeof options === \"number\") {\r\n            params.index = options;\r\n        }\r\n        else {\r\n            params.options = options ?? params.options;\r\n        }\r\n        return this.loadOptions(params);\r\n    }\r\n    async loadJSON(tagId, jsonUrl, index) {\r\n        let url, id;\r\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\r\n            url = tagId;\r\n        }\r\n        else {\r\n            id = tagId;\r\n            url = jsonUrl;\r\n        }\r\n        return this.loadRemoteOptions({ tagId: id, url, index, remote: true });\r\n    }\r\n    async loadOptions(params) {\r\n        const tagId = params.tagId ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url: jsonUrl, remote } = params, options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\r\n        let domContainer = params.element ?? document.getElementById(tagId);\r\n        if (!domContainer) {\r\n            domContainer = document.createElement(\"div\");\r\n            domContainer.id = tagId;\r\n            document.body.append(domContainer);\r\n        }\r\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this._engine.dom(), oldIndex = dom.findIndex((v) => v.id === tagId);\r\n        if (oldIndex >= 0) {\r\n            const old = this._engine.domItem(oldIndex);\r\n            if (old && !old.destroyed) {\r\n                old.destroy();\r\n                dom.splice(oldIndex, 1);\r\n            }\r\n        }\r\n        let canvasEl;\r\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\r\n            canvasEl = domContainer;\r\n            canvasEl.dataset[generatedAttribute] = \"false\";\r\n        }\r\n        else {\r\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\r\n            if (existingCanvases.length) {\r\n                canvasEl = existingCanvases[0];\r\n                canvasEl.dataset[generatedAttribute] = \"false\";\r\n            }\r\n            else {\r\n                canvasEl = document.createElement(\"canvas\");\r\n                canvasEl.dataset[generatedAttribute] = \"true\";\r\n                domContainer.appendChild(canvasEl);\r\n            }\r\n        }\r\n        if (!canvasEl.style.width) {\r\n            canvasEl.style.width = \"100%\";\r\n        }\r\n        if (!canvasEl.style.height) {\r\n            canvasEl.style.height = \"100%\";\r\n        }\r\n        const newItem = new Container(this._engine, tagId, currentOptions);\r\n        if (oldIndex >= 0) {\r\n            dom.splice(oldIndex, 0, newItem);\r\n        }\r\n        else {\r\n            dom.push(newItem);\r\n        }\r\n        newItem.canvas.loadCanvas(canvasEl);\r\n        await newItem.start();\r\n        return newItem;\r\n    }\r\n    async loadRemoteOptions(params) {\r\n        return this.loadOptions(params);\r\n    }\r\n    async set(id, domContainer, options, index) {\r\n        const params = { index, remote: false };\r\n        if (typeof id === \"string\") {\r\n            params.tagId = id;\r\n        }\r\n        else {\r\n            params.element = id;\r\n        }\r\n        if (domContainer instanceof HTMLElement) {\r\n            params.element = domContainer;\r\n        }\r\n        else {\r\n            params.options = domContainer;\r\n        }\r\n        if (typeof options === \"number\") {\r\n            params.index = options;\r\n        }\r\n        else {\r\n            params.options = options ?? params.options;\r\n        }\r\n        return this.loadOptions(params);\r\n    }\r\n    async setJSON(id, domContainer, jsonUrl, index) {\r\n        let url, newId, newIndex, element;\r\n        if (id instanceof HTMLElement) {\r\n            element = id;\r\n            url = domContainer;\r\n            newIndex = jsonUrl;\r\n        }\r\n        else {\r\n            newId = id;\r\n            element = domContainer;\r\n            url = jsonUrl;\r\n            newIndex = index;\r\n        }\r\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element, remote: true });\r\n    }\r\n}\r\n", "import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\r\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\r\n    let res = map.get(container);\r\n    if (!res || force) {\r\n        res = [...initializers.values()].map((t) => t(container));\r\n        map.set(container, res);\r\n    }\r\n    return res;\r\n}\r\nexport class Plugins {\r\n    constructor(engine) {\r\n        this._engine = engine;\r\n        this.plugins = [];\r\n        this._initializers = {\r\n            interactors: new Map(),\r\n            movers: new Map(),\r\n            updaters: new Map(),\r\n        };\r\n        this.interactors = new Map();\r\n        this.movers = new Map();\r\n        this.updaters = new Map();\r\n        this.presets = new Map();\r\n        this.drawers = new Map();\r\n        this.pathGenerators = new Map();\r\n    }\r\n    addInteractor(name, initInteractor) {\r\n        this._initializers.interactors.set(name, initInteractor);\r\n    }\r\n    addParticleMover(name, initMover) {\r\n        this._initializers.movers.set(name, initMover);\r\n    }\r\n    addParticleUpdater(name, initUpdater) {\r\n        this._initializers.updaters.set(name, initUpdater);\r\n    }\r\n    addPathGenerator(type, pathGenerator) {\r\n        if (!this.getPathGenerator(type)) {\r\n            this.pathGenerators.set(type, pathGenerator);\r\n        }\r\n    }\r\n    addPlugin(plugin) {\r\n        if (!this.getPlugin(plugin.id)) {\r\n            this.plugins.push(plugin);\r\n        }\r\n    }\r\n    addPreset(presetKey, options, override = false) {\r\n        if (override || !this.getPreset(presetKey)) {\r\n            this.presets.set(presetKey, options);\r\n        }\r\n    }\r\n    addShapeDrawer(types, drawer) {\r\n        executeOnSingleOrMultiple(types, (type) => {\r\n            if (!this.getShapeDrawer(type)) {\r\n                this.drawers.set(type, drawer);\r\n            }\r\n        });\r\n    }\r\n    destroy(container) {\r\n        this.updaters.delete(container);\r\n        this.movers.delete(container);\r\n        this.interactors.delete(container);\r\n    }\r\n    getAvailablePlugins(container) {\r\n        const res = new Map();\r\n        for (const plugin of this.plugins) {\r\n            if (!plugin.needsPlugin(container.actualOptions)) {\r\n                continue;\r\n            }\r\n            res.set(plugin.id, plugin.getPlugin(container));\r\n        }\r\n        return res;\r\n    }\r\n    getInteractors(container, force = false) {\r\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\r\n    }\r\n    getMovers(container, force = false) {\r\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\r\n    }\r\n    getPathGenerator(type) {\r\n        return this.pathGenerators.get(type);\r\n    }\r\n    getPlugin(plugin) {\r\n        return this.plugins.find((t) => t.id === plugin);\r\n    }\r\n    getPreset(preset) {\r\n        return this.presets.get(preset);\r\n    }\r\n    getShapeDrawer(type) {\r\n        return this.drawers.get(type);\r\n    }\r\n    getSupportedShapes() {\r\n        return this.drawers.keys();\r\n    }\r\n    getUpdaters(container, force = false) {\r\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\r\n    }\r\n    loadOptions(options, sourceOptions) {\r\n        for (const plugin of this.plugins) {\r\n            plugin.loadOptions(options, sourceOptions);\r\n        }\r\n    }\r\n    loadParticlesOptions(container, options, ...sourceOptions) {\r\n        const updaters = this.updaters.get(container);\r\n        if (!updaters) {\r\n            return;\r\n        }\r\n        for (const updater of updaters) {\r\n            if (updater.loadOptions) {\r\n                updater.loadOptions(options, ...sourceOptions);\r\n            }\r\n        }\r\n    }\r\n}\r\n", "import { EventDispatcher } from \"./Utils/EventDispatcher\";\r\nimport { Loader } from \"./Core/Loader\";\r\nimport { Plugins } from \"./Core/Utils/Plugins\";\r\nimport { errorPrefix } from \"./Core/Utils/Constants\";\r\nexport class Engine {\r\n    constructor() {\r\n        this._configs = new Map();\r\n        this._domArray = [];\r\n        this._eventDispatcher = new EventDispatcher();\r\n        this._initialized = false;\r\n        this._loader = new Loader(this);\r\n        this.plugins = new Plugins(this);\r\n    }\r\n    get configs() {\r\n        const res = {};\r\n        for (const [name, config] of this._configs) {\r\n            res[name] = config;\r\n        }\r\n        return res;\r\n    }\r\n    get version() {\r\n        return \"2.10.1\";\r\n    }\r\n    addConfig(nameOrConfig, config) {\r\n        if (typeof nameOrConfig === \"string\") {\r\n            if (config) {\r\n                config.name = nameOrConfig;\r\n                this._configs.set(nameOrConfig, config);\r\n            }\r\n        }\r\n        else {\r\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\r\n        }\r\n    }\r\n    addEventListener(type, listener) {\r\n        this._eventDispatcher.addEventListener(type, listener);\r\n    }\r\n    async addInteractor(name, interactorInitializer) {\r\n        this.plugins.addInteractor(name, interactorInitializer);\r\n        await this.refresh();\r\n    }\r\n    async addMover(name, moverInitializer) {\r\n        this.plugins.addParticleMover(name, moverInitializer);\r\n        await this.refresh();\r\n    }\r\n    async addParticleUpdater(name, updaterInitializer) {\r\n        this.plugins.addParticleUpdater(name, updaterInitializer);\r\n        await this.refresh();\r\n    }\r\n    async addPathGenerator(name, generator) {\r\n        this.plugins.addPathGenerator(name, generator);\r\n        await this.refresh();\r\n    }\r\n    async addPlugin(plugin) {\r\n        this.plugins.addPlugin(plugin);\r\n        await this.refresh();\r\n    }\r\n    async addPreset(preset, options, override = false) {\r\n        this.plugins.addPreset(preset, options, override);\r\n        await this.refresh();\r\n    }\r\n    async addShape(shape, drawer, init, afterEffect, destroy) {\r\n        let customDrawer;\r\n        if (typeof drawer === \"function\") {\r\n            customDrawer = {\r\n                afterEffect: afterEffect,\r\n                destroy: destroy,\r\n                draw: drawer,\r\n                init: init,\r\n            };\r\n        }\r\n        else {\r\n            customDrawer = drawer;\r\n        }\r\n        this.plugins.addShapeDrawer(shape, customDrawer);\r\n        await this.refresh();\r\n    }\r\n    dispatchEvent(type, args) {\r\n        this._eventDispatcher.dispatchEvent(type, args);\r\n    }\r\n    dom() {\r\n        return this._domArray;\r\n    }\r\n    domItem(index) {\r\n        const dom = this.dom(), item = dom[index];\r\n        if (!item || item.destroyed) {\r\n            dom.splice(index, 1);\r\n            return;\r\n        }\r\n        return item;\r\n    }\r\n    init() {\r\n        if (this._initialized) {\r\n            return;\r\n        }\r\n        this._initialized = true;\r\n    }\r\n    async load(tagId, options) {\r\n        return this._loader.load(tagId, options);\r\n    }\r\n    async loadFromArray(tagId, options, index) {\r\n        return this._loader.load(tagId, options, index);\r\n    }\r\n    async loadJSON(tagId, pathConfigJson, index) {\r\n        return this._loader.loadJSON(tagId, pathConfigJson, index);\r\n    }\r\n    async refresh() {\r\n        this.dom().forEach((t) => t.refresh());\r\n    }\r\n    removeEventListener(type, listener) {\r\n        this._eventDispatcher.removeEventListener(type, listener);\r\n    }\r\n    async set(id, element, options) {\r\n        return this._loader.set(id, element, options);\r\n    }\r\n    async setJSON(id, element, pathConfigJson, index) {\r\n        return this._loader.setJSON(id, element, pathConfigJson, index);\r\n    }\r\n    setOnClickHandler(callback) {\r\n        const dom = this.dom();\r\n        if (!dom.length) {\r\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()`);\r\n        }\r\n        for (const domItem of dom) {\r\n            domItem.addClickHandler(callback);\r\n        }\r\n    }\r\n}\r\n", "import { getRangeValue, parseAlpha } from \"./NumberUtils\";\r\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\r\nexport class HslColorManager {\r\n    constructor() {\r\n        this.key = \"hsl\";\r\n        this.stringPrefix = \"hsl\";\r\n    }\r\n    handleColor(color) {\r\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\r\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\r\n            return hslToRgb(hslColor);\r\n        }\r\n    }\r\n    handleRangeColor(color) {\r\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\r\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\r\n            return hslToRgb({\r\n                h: getRangeValue(hslColor.h),\r\n                l: getRangeValue(hslColor.l),\r\n                s: getRangeValue(hslColor.s),\r\n            });\r\n        }\r\n    }\r\n    parseString(input) {\r\n        if (!input.startsWith(\"hsl\")) {\r\n            return;\r\n        }\r\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\r\n        return result\r\n            ? hslaToRgba({\r\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\r\n                h: parseInt(result[1], 10),\r\n                l: parseInt(result[3], 10),\r\n                s: parseInt(result[2], 10),\r\n            })\r\n            : undefined;\r\n    }\r\n}\r\n", "import { getRangeValue, parseAlpha } from \"./NumberUtils\";\r\nexport class RgbColorManager {\r\n    constructor() {\r\n        this.key = \"rgb\";\r\n        this.stringPrefix = \"rgb\";\r\n    }\r\n    handleColor(color) {\r\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\r\n        if (rgbColor.r !== undefined) {\r\n            return rgbColor;\r\n        }\r\n    }\r\n    handleRangeColor(color) {\r\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\r\n        if (rgbColor.r !== undefined) {\r\n            return {\r\n                r: getRangeValue(rgbColor.r),\r\n                g: getRangeValue(rgbColor.g),\r\n                b: getRangeValue(rgbColor.b),\r\n            };\r\n        }\r\n    }\r\n    parseString(input) {\r\n        if (!input.startsWith(this.stringPrefix)) {\r\n            return;\r\n        }\r\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\r\n        return result\r\n            ? {\r\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\r\n                b: parseInt(result[3], 10),\r\n                g: parseInt(result[2], 10),\r\n                r: parseInt(result[1], 10),\r\n            }\r\n            : undefined;\r\n    }\r\n}\r\n", "export class ExternalInteractorBase {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this.type = \"external\";\r\n    }\r\n}\r\n", "export class ParticlesInteractorBase {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this.type = \"particles\";\r\n    }\r\n}\r\n", "import { Engine } from \"./engine\";\r\nimport { HslColorManager } from \"./Utils/HslColorManager\";\r\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\r\nimport { addColorManager } from \"./Utils/ColorUtils\";\r\nimport { isSsr } from \"./Utils/Utils\";\r\nconst rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\r\naddColorManager(rgbColorManager);\r\naddColorManager(hslColorManager);\r\nconst tsParticles = new Engine();\r\ntsParticles.init();\r\nif (!isSsr()) {\r\n    window.tsParticles = tsParticles;\r\n}\r\nexport * from \"./exports\";\r\nexport * from \"./export-types\";\r\nexport { tsParticles };\r\n"],
  "mappings": "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",
  "names": ["divMode", "trail", "container", "theme", "container", "position", "capacity", "container"]
}
