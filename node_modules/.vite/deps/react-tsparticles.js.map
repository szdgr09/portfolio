{
  "version": 3,
  "sources": ["../../type-detect/type-detect.js", "../../deep-eql/index.js", "../../react-tsparticles/esm/Particles.js", "../../react-tsparticles/esm/index.js"],
  "sourcesContent": ["(function (global, factory) {\r\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n\ttypeof define === 'function' && define.amd ? define(factory) :\r\n\t(global.typeDetect = factory());\r\n}(this, (function () { 'use strict';\r\n\r\n/* !\r\n * type-detect\r\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\r\n * MIT Licensed\r\n */\r\nvar promiseExists = typeof Promise === 'function';\r\n\r\n/* eslint-disable no-undef */\r\nvar globalObject = typeof self === 'object' ? self : global; // eslint-disable-line id-blacklist\r\n\r\nvar symbolExists = typeof Symbol !== 'undefined';\r\nvar mapExists = typeof Map !== 'undefined';\r\nvar setExists = typeof Set !== 'undefined';\r\nvar weakMapExists = typeof WeakMap !== 'undefined';\r\nvar weakSetExists = typeof WeakSet !== 'undefined';\r\nvar dataViewExists = typeof DataView !== 'undefined';\r\nvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\r\nvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\r\nvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\r\nvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\r\nvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\r\nvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\r\nvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\r\nvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\r\nvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\r\nvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\r\nvar toStringLeftSliceLength = 8;\r\nvar toStringRightSliceLength = -1;\r\n/**\r\n * ### typeOf (obj)\r\n *\r\n * Uses `Object.prototype.toString` to determine the type of an object,\r\n * normalising behaviour across engine versions & well optimised.\r\n *\r\n * @param {Mixed} object\r\n * @return {String} object type\r\n * @api public\r\n */\r\nfunction typeDetect(obj) {\r\n  /* ! Speed optimisation\r\n   * Pre:\r\n   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\r\n   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\r\n   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\r\n   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\r\n   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\r\n   * Post:\r\n   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\r\n   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\r\n   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\r\n   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\r\n   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\r\n   */\r\n  var typeofObj = typeof obj;\r\n  if (typeofObj !== 'object') {\r\n    return typeofObj;\r\n  }\r\n\r\n  /* ! Speed optimisation\r\n   * Pre:\r\n   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\r\n   * Post:\r\n   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\r\n   */\r\n  if (obj === null) {\r\n    return 'null';\r\n  }\r\n\r\n  /* ! Spec Conformance\r\n   * Test: `Object.prototype.toString.call(window)``\r\n   *  - Node === \"[object global]\"\r\n   *  - Chrome === \"[object global]\"\r\n   *  - Firefox === \"[object Window]\"\r\n   *  - PhantomJS === \"[object Window]\"\r\n   *  - Safari === \"[object Window]\"\r\n   *  - IE 11 === \"[object Window]\"\r\n   *  - IE Edge === \"[object Window]\"\r\n   * Test: `Object.prototype.toString.call(this)``\r\n   *  - Chrome Worker === \"[object global]\"\r\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\r\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\r\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\r\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\r\n   */\r\n  if (obj === globalObject) {\r\n    return 'global';\r\n  }\r\n\r\n  /* ! Speed optimisation\r\n   * Pre:\r\n   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\r\n   * Post:\r\n   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\r\n   */\r\n  if (\r\n    Array.isArray(obj) &&\r\n    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\r\n  ) {\r\n    return 'Array';\r\n  }\r\n\r\n  // Not caching existence of `window` and related properties due to potential\r\n  // for `window` to be unset before tests in quasi-browser environments.\r\n  if (typeof window === 'object' && window !== null) {\r\n    /* ! Spec Conformance\r\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\r\n     * WhatWG HTML$7.7.3 - The `Location` interface\r\n     * Test: `Object.prototype.toString.call(window.location)``\r\n     *  - IE <=11 === \"[object Object]\"\r\n     *  - IE Edge <=13 === \"[object Object]\"\r\n     */\r\n    if (typeof window.location === 'object' && obj === window.location) {\r\n      return 'Location';\r\n    }\r\n\r\n    /* ! Spec Conformance\r\n     * (https://html.spec.whatwg.org/#document)\r\n     * WhatWG HTML$3.1.1 - The `Document` object\r\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\r\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\r\n     *       which suggests that browsers should use HTMLTableCellElement for\r\n     *       both TD and TH elements. WhatWG separates these.\r\n     *       WhatWG HTML states:\r\n     *         > For historical reasons, Window objects must also have a\r\n     *         > writable, configurable, non-enumerable property named\r\n     *         > HTMLDocument whose value is the Document interface object.\r\n     * Test: `Object.prototype.toString.call(document)``\r\n     *  - Chrome === \"[object HTMLDocument]\"\r\n     *  - Firefox === \"[object HTMLDocument]\"\r\n     *  - Safari === \"[object HTMLDocument]\"\r\n     *  - IE <=10 === \"[object Document]\"\r\n     *  - IE 11 === \"[object HTMLDocument]\"\r\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\r\n     */\r\n    if (typeof window.document === 'object' && obj === window.document) {\r\n      return 'Document';\r\n    }\r\n\r\n    if (typeof window.navigator === 'object') {\r\n      /* ! Spec Conformance\r\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\r\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\r\n       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\r\n       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\r\n       */\r\n      if (typeof window.navigator.mimeTypes === 'object' &&\r\n          obj === window.navigator.mimeTypes) {\r\n        return 'MimeTypeArray';\r\n      }\r\n\r\n      /* ! Spec Conformance\r\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\r\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\r\n       * Test: `Object.prototype.toString.call(navigator.plugins)``\r\n       *  - IE <=10 === \"[object MSPluginsCollection]\"\r\n       */\r\n      if (typeof window.navigator.plugins === 'object' &&\r\n          obj === window.navigator.plugins) {\r\n        return 'PluginArray';\r\n      }\r\n    }\r\n\r\n    if ((typeof window.HTMLElement === 'function' ||\r\n        typeof window.HTMLElement === 'object') &&\r\n        obj instanceof window.HTMLElement) {\r\n      /* ! Spec Conformance\r\n      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\r\n      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\r\n      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\r\n      *  - IE <=10 === \"[object HTMLBlockElement]\"\r\n      */\r\n      if (obj.tagName === 'BLOCKQUOTE') {\r\n        return 'HTMLQuoteElement';\r\n      }\r\n\r\n      /* ! Spec Conformance\r\n       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\r\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\r\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\r\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\r\n       *       which suggests that browsers should use HTMLTableCellElement for\r\n       *       both TD and TH elements. WhatWG separates these.\r\n       * Test: Object.prototype.toString.call(document.createElement('td'))\r\n       *  - Chrome === \"[object HTMLTableCellElement]\"\r\n       *  - Firefox === \"[object HTMLTableCellElement]\"\r\n       *  - Safari === \"[object HTMLTableCellElement]\"\r\n       */\r\n      if (obj.tagName === 'TD') {\r\n        return 'HTMLTableDataCellElement';\r\n      }\r\n\r\n      /* ! Spec Conformance\r\n       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\r\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\r\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\r\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\r\n       *       which suggests that browsers should use HTMLTableCellElement for\r\n       *       both TD and TH elements. WhatWG separates these.\r\n       * Test: Object.prototype.toString.call(document.createElement('th'))\r\n       *  - Chrome === \"[object HTMLTableCellElement]\"\r\n       *  - Firefox === \"[object HTMLTableCellElement]\"\r\n       *  - Safari === \"[object HTMLTableCellElement]\"\r\n       */\r\n      if (obj.tagName === 'TH') {\r\n        return 'HTMLTableHeaderCellElement';\r\n      }\r\n    }\r\n  }\r\n\r\n  /* ! Speed optimisation\r\n  * Pre:\r\n  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\r\n  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\r\n  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\r\n  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\r\n  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\r\n  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\r\n  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\r\n  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\r\n  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\r\n  * Post:\r\n  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\r\n  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\r\n  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\r\n  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\r\n  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\r\n  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\r\n  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\r\n  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\r\n  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\r\n  */\r\n  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\r\n  if (typeof stringTag === 'string') {\r\n    return stringTag;\r\n  }\r\n\r\n  var objPrototype = Object.getPrototypeOf(obj);\r\n  /* ! Speed optimisation\r\n  * Pre:\r\n  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\r\n  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\r\n  * Post:\r\n  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\r\n  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\r\n  */\r\n  if (objPrototype === RegExp.prototype) {\r\n    return 'RegExp';\r\n  }\r\n\r\n  /* ! Speed optimisation\r\n  * Pre:\r\n  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\r\n  * Post:\r\n  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\r\n  */\r\n  if (objPrototype === Date.prototype) {\r\n    return 'Date';\r\n  }\r\n\r\n  /* ! Spec Conformance\r\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\r\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\r\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\r\n   *  - Chrome <=47 === \"[object Object]\"\r\n   *  - Edge <=20 === \"[object Object]\"\r\n   *  - Firefox 29-Latest === \"[object Promise]\"\r\n   *  - Safari 7.1-Latest === \"[object Promise]\"\r\n   */\r\n  if (promiseExists && objPrototype === Promise.prototype) {\r\n    return 'Promise';\r\n  }\r\n\r\n  /* ! Speed optimisation\r\n  * Pre:\r\n  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\r\n  * Post:\r\n  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\r\n  */\r\n  if (setExists && objPrototype === Set.prototype) {\r\n    return 'Set';\r\n  }\r\n\r\n  /* ! Speed optimisation\r\n  * Pre:\r\n  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\r\n  * Post:\r\n  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\r\n  */\r\n  if (mapExists && objPrototype === Map.prototype) {\r\n    return 'Map';\r\n  }\r\n\r\n  /* ! Speed optimisation\r\n  * Pre:\r\n  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\r\n  * Post:\r\n  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\r\n  */\r\n  if (weakSetExists && objPrototype === WeakSet.prototype) {\r\n    return 'WeakSet';\r\n  }\r\n\r\n  /* ! Speed optimisation\r\n  * Pre:\r\n  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\r\n  * Post:\r\n  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\r\n  */\r\n  if (weakMapExists && objPrototype === WeakMap.prototype) {\r\n    return 'WeakMap';\r\n  }\r\n\r\n  /* ! Spec Conformance\r\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\r\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\r\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\r\n   *  - Edge <=13 === \"[object Object]\"\r\n   */\r\n  if (dataViewExists && objPrototype === DataView.prototype) {\r\n    return 'DataView';\r\n  }\r\n\r\n  /* ! Spec Conformance\r\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\r\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\r\n   * Test: `Object.prototype.toString.call(new Map().entries())``\r\n   *  - Edge <=13 === \"[object Object]\"\r\n   */\r\n  if (mapExists && objPrototype === mapIteratorPrototype) {\r\n    return 'Map Iterator';\r\n  }\r\n\r\n  /* ! Spec Conformance\r\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\r\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\r\n   * Test: `Object.prototype.toString.call(new Set().entries())``\r\n   *  - Edge <=13 === \"[object Object]\"\r\n   */\r\n  if (setExists && objPrototype === setIteratorPrototype) {\r\n    return 'Set Iterator';\r\n  }\r\n\r\n  /* ! Spec Conformance\r\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\r\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\r\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\r\n   *  - Edge <=13 === \"[object Object]\"\r\n   */\r\n  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\r\n    return 'Array Iterator';\r\n  }\r\n\r\n  /* ! Spec Conformance\r\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\r\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\r\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\r\n   *  - Edge <=13 === \"[object Object]\"\r\n   */\r\n  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\r\n    return 'String Iterator';\r\n  }\r\n\r\n  /* ! Speed optimisation\r\n  * Pre:\r\n  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\r\n  * Post:\r\n  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\r\n  */\r\n  if (objPrototype === null) {\r\n    return 'Object';\r\n  }\r\n\r\n  return Object\r\n    .prototype\r\n    .toString\r\n    .call(obj)\r\n    .slice(toStringLeftSliceLength, toStringRightSliceLength);\r\n}\r\n\r\nreturn typeDetect;\r\n\r\n})));\r\n", "'use strict';\r\n/* globals Symbol: false, Uint8Array: false, WeakMap: false */\r\n/*!\r\n * deep-eql\r\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\r\n * MIT Licensed\r\n */\r\n\r\nvar type = require('type-detect');\r\nfunction FakeMap() {\r\n  this._key = 'chai/deep-eql__' + Math.random() + Date.now();\r\n}\r\n\r\nFakeMap.prototype = {\r\n  get: function get(key) {\r\n    return key[this._key];\r\n  },\r\n  set: function set(key, value) {\r\n    if (Object.isExtensible(key)) {\r\n      Object.defineProperty(key, this._key, {\r\n        value: value,\r\n        configurable: true,\r\n      });\r\n    }\r\n  },\r\n};\r\n\r\nvar MemoizeMap = typeof WeakMap === 'function' ? WeakMap : FakeMap;\r\n/*!\r\n * Check to see if the MemoizeMap has recorded a result of the two operands\r\n *\r\n * @param {Mixed} leftHandOperand\r\n * @param {Mixed} rightHandOperand\r\n * @param {MemoizeMap} memoizeMap\r\n * @returns {Boolean|null} result\r\n*/\r\nfunction memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {\r\n  // Technically, WeakMap keys can *only* be objects, not primitives.\r\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\r\n    return null;\r\n  }\r\n  var leftHandMap = memoizeMap.get(leftHandOperand);\r\n  if (leftHandMap) {\r\n    var result = leftHandMap.get(rightHandOperand);\r\n    if (typeof result === 'boolean') {\r\n      return result;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n/*!\r\n * Set the result of the equality into the MemoizeMap\r\n *\r\n * @param {Mixed} leftHandOperand\r\n * @param {Mixed} rightHandOperand\r\n * @param {MemoizeMap} memoizeMap\r\n * @param {Boolean} result\r\n*/\r\nfunction memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {\r\n  // Technically, WeakMap keys can *only* be objects, not primitives.\r\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\r\n    return;\r\n  }\r\n  var leftHandMap = memoizeMap.get(leftHandOperand);\r\n  if (leftHandMap) {\r\n    leftHandMap.set(rightHandOperand, result);\r\n  } else {\r\n    leftHandMap = new MemoizeMap();\r\n    leftHandMap.set(rightHandOperand, result);\r\n    memoizeMap.set(leftHandOperand, leftHandMap);\r\n  }\r\n}\r\n\r\n/*!\r\n * Primary Export\r\n */\r\n\r\nmodule.exports = deepEqual;\r\nmodule.exports.MemoizeMap = MemoizeMap;\r\n\r\n/**\r\n * Assert deeply nested sameValue equality between two objects of any type.\r\n *\r\n * @param {Mixed} leftHandOperand\r\n * @param {Mixed} rightHandOperand\r\n * @param {Object} [options] (optional) Additional options\r\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\r\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\r\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\r\n    references to blow the stack.\r\n * @return {Boolean} equal match\r\n */\r\nfunction deepEqual(leftHandOperand, rightHandOperand, options) {\r\n  // If we have a comparator, we can't assume anything; so bail to its check first.\r\n  if (options && options.comparator) {\r\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\r\n  }\r\n\r\n  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\r\n  if (simpleResult !== null) {\r\n    return simpleResult;\r\n  }\r\n\r\n  // Deeper comparisons are pushed through to a larger function\r\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\r\n}\r\n\r\n/**\r\n * Many comparisons can be canceled out early via simple equality or primitive checks.\r\n * @param {Mixed} leftHandOperand\r\n * @param {Mixed} rightHandOperand\r\n * @return {Boolean|null} equal match\r\n */\r\nfunction simpleEqual(leftHandOperand, rightHandOperand) {\r\n  // Equal references (except for Numbers) can be returned early\r\n  if (leftHandOperand === rightHandOperand) {\r\n    // Handle +-0 cases\r\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;\r\n  }\r\n\r\n  // handle NaN cases\r\n  if (\r\n    leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\r\n    rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\r\n  // strings, and undefined, can be compared by reference.\r\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\r\n    // Easy out b/c it would have passed the first equality check\r\n    return false;\r\n  }\r\n  return null;\r\n}\r\n\r\n/*!\r\n * The main logic of the `deepEqual` function.\r\n *\r\n * @param {Mixed} leftHandOperand\r\n * @param {Mixed} rightHandOperand\r\n * @param {Object} [options] (optional) Additional options\r\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\r\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\r\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\r\n    references to blow the stack.\r\n * @return {Boolean} equal match\r\n*/\r\nfunction extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {\r\n  options = options || {};\r\n  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();\r\n  var comparator = options && options.comparator;\r\n\r\n  // Check if a memoized result exists.\r\n  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);\r\n  if (memoizeResultLeft !== null) {\r\n    return memoizeResultLeft;\r\n  }\r\n  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);\r\n  if (memoizeResultRight !== null) {\r\n    return memoizeResultRight;\r\n  }\r\n\r\n  // If a comparator is present, use it.\r\n  if (comparator) {\r\n    var comparatorResult = comparator(leftHandOperand, rightHandOperand);\r\n    // Comparators may return null, in which case we want to go back to default behavior.\r\n    if (comparatorResult === false || comparatorResult === true) {\r\n      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);\r\n      return comparatorResult;\r\n    }\r\n    // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\r\n    // what to do, we need to make sure to return the basic tests first before we move on.\r\n    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\r\n    if (simpleResult !== null) {\r\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\r\n      return simpleResult;\r\n    }\r\n  }\r\n\r\n  var leftHandType = type(leftHandOperand);\r\n  if (leftHandType !== type(rightHandOperand)) {\r\n    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);\r\n    return false;\r\n  }\r\n\r\n  // Temporarily set the operands in the memoize object to prevent blowing the stack\r\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);\r\n\r\n  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);\r\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);\r\n  return result;\r\n}\r\n\r\nfunction extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {\r\n  switch (leftHandType) {\r\n    case 'String':\r\n    case 'Number':\r\n    case 'Boolean':\r\n    case 'Date':\r\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\r\n      return deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf());\r\n    case 'Promise':\r\n    case 'Symbol':\r\n    case 'function':\r\n    case 'WeakMap':\r\n    case 'WeakSet':\r\n      return leftHandOperand === rightHandOperand;\r\n    case 'Error':\r\n      return keysEqual(leftHandOperand, rightHandOperand, [ 'name', 'message', 'code' ], options);\r\n    case 'Arguments':\r\n    case 'Int8Array':\r\n    case 'Uint8Array':\r\n    case 'Uint8ClampedArray':\r\n    case 'Int16Array':\r\n    case 'Uint16Array':\r\n    case 'Int32Array':\r\n    case 'Uint32Array':\r\n    case 'Float32Array':\r\n    case 'Float64Array':\r\n    case 'Array':\r\n      return iterableEqual(leftHandOperand, rightHandOperand, options);\r\n    case 'RegExp':\r\n      return regexpEqual(leftHandOperand, rightHandOperand);\r\n    case 'Generator':\r\n      return generatorEqual(leftHandOperand, rightHandOperand, options);\r\n    case 'DataView':\r\n      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);\r\n    case 'ArrayBuffer':\r\n      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);\r\n    case 'Set':\r\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\r\n    case 'Map':\r\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\r\n    case 'Temporal.PlainDate':\r\n    case 'Temporal.PlainTime':\r\n    case 'Temporal.PlainDateTime':\r\n    case 'Temporal.Instant':\r\n    case 'Temporal.ZonedDateTime':\r\n    case 'Temporal.PlainYearMonth':\r\n    case 'Temporal.PlainMonthDay':\r\n      return leftHandOperand.equals(rightHandOperand);\r\n    case 'Temporal.Duration':\r\n      return leftHandOperand.total('nanoseconds') === rightHandOperand.total('nanoseconds');\r\n    case 'Temporal.TimeZone':\r\n    case 'Temporal.Calendar':\r\n      return leftHandOperand.toString() === rightHandOperand.toString();\r\n    default:\r\n      return objectEqual(leftHandOperand, rightHandOperand, options);\r\n  }\r\n}\r\n\r\n/*!\r\n * Compare two Regular Expressions for equality.\r\n *\r\n * @param {RegExp} leftHandOperand\r\n * @param {RegExp} rightHandOperand\r\n * @return {Boolean} result\r\n */\r\n\r\nfunction regexpEqual(leftHandOperand, rightHandOperand) {\r\n  return leftHandOperand.toString() === rightHandOperand.toString();\r\n}\r\n\r\n/*!\r\n * Compare two Sets/Maps for equality. Faster than other equality functions.\r\n *\r\n * @param {Set} leftHandOperand\r\n * @param {Set} rightHandOperand\r\n * @param {Object} [options] (Optional)\r\n * @return {Boolean} result\r\n */\r\n\r\nfunction entriesEqual(leftHandOperand, rightHandOperand, options) {\r\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\r\n  if (leftHandOperand.size !== rightHandOperand.size) {\r\n    return false;\r\n  }\r\n  if (leftHandOperand.size === 0) {\r\n    return true;\r\n  }\r\n  var leftHandItems = [];\r\n  var rightHandItems = [];\r\n  leftHandOperand.forEach(function gatherEntries(key, value) {\r\n    leftHandItems.push([ key, value ]);\r\n  });\r\n  rightHandOperand.forEach(function gatherEntries(key, value) {\r\n    rightHandItems.push([ key, value ]);\r\n  });\r\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);\r\n}\r\n\r\n/*!\r\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\r\n *\r\n * @param {Iterable} leftHandOperand\r\n * @param {Iterable} rightHandOperand\r\n * @param {Object} [options] (Optional)\r\n * @return {Boolean} result\r\n */\r\n\r\nfunction iterableEqual(leftHandOperand, rightHandOperand, options) {\r\n  var length = leftHandOperand.length;\r\n  if (length !== rightHandOperand.length) {\r\n    return false;\r\n  }\r\n  if (length === 0) {\r\n    return true;\r\n  }\r\n  var index = -1;\r\n  while (++index < length) {\r\n    if (deepEqual(leftHandOperand[index], rightHandOperand[index], options) === false) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/*!\r\n * Simple equality for generator objects such as those returned by generator functions.\r\n *\r\n * @param {Iterable} leftHandOperand\r\n * @param {Iterable} rightHandOperand\r\n * @param {Object} [options] (Optional)\r\n * @return {Boolean} result\r\n */\r\n\r\nfunction generatorEqual(leftHandOperand, rightHandOperand, options) {\r\n  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);\r\n}\r\n\r\n/*!\r\n * Determine if the given object has an @@iterator function.\r\n *\r\n * @param {Object} target\r\n * @return {Boolean} `true` if the object has an @@iterator function.\r\n */\r\nfunction hasIteratorFunction(target) {\r\n  return typeof Symbol !== 'undefined' &&\r\n    typeof target === 'object' &&\r\n    typeof Symbol.iterator !== 'undefined' &&\r\n    typeof target[Symbol.iterator] === 'function';\r\n}\r\n\r\n/*!\r\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\r\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\r\n *\r\n * @param {Object} target\r\n * @returns {Array} an array of entries from the @@iterator function\r\n */\r\nfunction getIteratorEntries(target) {\r\n  if (hasIteratorFunction(target)) {\r\n    try {\r\n      return getGeneratorEntries(target[Symbol.iterator]());\r\n    } catch (iteratorError) {\r\n      return [];\r\n    }\r\n  }\r\n  return [];\r\n}\r\n\r\n/*!\r\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\r\n *\r\n * @param {Generator} target\r\n * @returns {Array} an array of entries from the Generator.\r\n */\r\nfunction getGeneratorEntries(generator) {\r\n  var generatorResult = generator.next();\r\n  var accumulator = [ generatorResult.value ];\r\n  while (generatorResult.done === false) {\r\n    generatorResult = generator.next();\r\n    accumulator.push(generatorResult.value);\r\n  }\r\n  return accumulator;\r\n}\r\n\r\n/*!\r\n * Gets all own and inherited enumerable keys from a target.\r\n *\r\n * @param {Object} target\r\n * @returns {Array} an array of own and inherited enumerable keys from the target.\r\n */\r\nfunction getEnumerableKeys(target) {\r\n  var keys = [];\r\n  for (var key in target) {\r\n    keys.push(key);\r\n  }\r\n  return keys;\r\n}\r\n\r\nfunction getEnumerableSymbols(target) {\r\n  var keys = [];\r\n  var allKeys = Object.getOwnPropertySymbols(target);\r\n  for (var i = 0; i < allKeys.length; i += 1) {\r\n    var key = allKeys[i];\r\n    if (Object.getOwnPropertyDescriptor(target, key).enumerable) {\r\n      keys.push(key);\r\n    }\r\n  }\r\n  return keys;\r\n}\r\n\r\n/*!\r\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\r\n * each key. If any value of the given key is not equal, the function will return false (early).\r\n *\r\n * @param {Mixed} leftHandOperand\r\n * @param {Mixed} rightHandOperand\r\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\r\n * @param {Object} [options] (Optional)\r\n * @return {Boolean} result\r\n */\r\nfunction keysEqual(leftHandOperand, rightHandOperand, keys, options) {\r\n  var length = keys.length;\r\n  if (length === 0) {\r\n    return true;\r\n  }\r\n  for (var i = 0; i < length; i += 1) {\r\n    if (deepEqual(leftHandOperand[keys[i]], rightHandOperand[keys[i]], options) === false) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/*!\r\n * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`\r\n * for each enumerable key in the object.\r\n *\r\n * @param {Mixed} leftHandOperand\r\n * @param {Mixed} rightHandOperand\r\n * @param {Object} [options] (Optional)\r\n * @return {Boolean} result\r\n */\r\nfunction objectEqual(leftHandOperand, rightHandOperand, options) {\r\n  var leftHandKeys = getEnumerableKeys(leftHandOperand);\r\n  var rightHandKeys = getEnumerableKeys(rightHandOperand);\r\n  var leftHandSymbols = getEnumerableSymbols(leftHandOperand);\r\n  var rightHandSymbols = getEnumerableSymbols(rightHandOperand);\r\n  leftHandKeys = leftHandKeys.concat(leftHandSymbols);\r\n  rightHandKeys = rightHandKeys.concat(rightHandSymbols);\r\n\r\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\r\n    if (iterableEqual(mapSymbols(leftHandKeys).sort(), mapSymbols(rightHandKeys).sort()) === false) {\r\n      return false;\r\n    }\r\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);\r\n  }\r\n\r\n  var leftHandEntries = getIteratorEntries(leftHandOperand);\r\n  var rightHandEntries = getIteratorEntries(rightHandOperand);\r\n  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {\r\n    leftHandEntries.sort();\r\n    rightHandEntries.sort();\r\n    return iterableEqual(leftHandEntries, rightHandEntries, options);\r\n  }\r\n\r\n  if (leftHandKeys.length === 0 &&\r\n      leftHandEntries.length === 0 &&\r\n      rightHandKeys.length === 0 &&\r\n      rightHandEntries.length === 0) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/*!\r\n * Returns true if the argument is a primitive.\r\n *\r\n * This intentionally returns true for all objects that can be compared by reference,\r\n * including functions and symbols.\r\n *\r\n * @param {Mixed} value\r\n * @return {Boolean} result\r\n */\r\nfunction isPrimitive(value) {\r\n  return value === null || typeof value !== 'object';\r\n}\r\n\r\nfunction mapSymbols(arr) {\r\n  return arr.map(function mapSymbol(entry) {\r\n    if (typeof entry === 'symbol') {\r\n      return entry.toString();\r\n    }\r\n\r\n    return entry;\r\n  });\r\n}\r\n", "import React, { Component } from \"react\";\r\nimport { tsParticles } from \"tsparticles-engine\";\r\nimport equal from \"deep-eql\";\r\nconst defaultId = \"tsparticles\";\r\nclass Particles extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            init: false,\r\n            library: undefined,\r\n        };\r\n    }\r\n    destroy() {\r\n        if (!this.state.library) {\r\n            return;\r\n        }\r\n        this.state.library.destroy();\r\n        this.setState({\r\n            library: undefined,\r\n        });\r\n    }\r\n    shouldComponentUpdate(nextProps) {\r\n        return !equal(nextProps, this.props);\r\n    }\r\n    componentDidUpdate() {\r\n        this.refresh();\r\n    }\r\n    forceUpdate() {\r\n        this.refresh().then(() => {\r\n            super.forceUpdate();\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        (async () => {\r\n            if (this.props.init) {\r\n                await this.props.init(tsParticles);\r\n            }\r\n            this.setState({\r\n                init: true,\r\n            }, async () => {\r\n                await this.loadParticles();\r\n            });\r\n        })();\r\n    }\r\n    componentWillUnmount() {\r\n        this.destroy();\r\n    }\r\n    render() {\r\n        const { width, height, className, canvasClassName, id } = this.props;\r\n        return (React.createElement(\"div\", { className: className, id: id },\r\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\r\n                    ...this.props.style,\r\n                    width,\r\n                    height,\r\n                } })));\r\n    }\r\n    async refresh() {\r\n        this.destroy();\r\n        await this.loadParticles();\r\n    }\r\n    async loadParticles() {\r\n        if (!this.state.init) {\r\n            return;\r\n        }\r\n        const cb = async (container) => {\r\n            if (this.props.container) {\r\n                this.props.container.current = container;\r\n            }\r\n            this.setState({\r\n                library: container,\r\n            });\r\n            if (this.props.loaded) {\r\n                await this.props.loaded(container);\r\n            }\r\n        };\r\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = this.props.url\r\n            ? await tsParticles.loadJSON(id, this.props.url)\r\n            : await tsParticles.load(id, this.props.params ?? this.props.options);\r\n        await cb(container);\r\n    }\r\n}\r\nParticles.defaultProps = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    options: {},\r\n    style: {},\r\n    url: undefined,\r\n    id: defaultId,\r\n};\r\nexport default Particles;\r\n", "import Particles from \"./Particles\";\r\nexport default Particles;\r\nexport { Particles };\r\n"],
  "mappings": "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",
  "names": ["global", "equal", "React", "container"]
}
